{
  "statistics": {
    "detectionDate": "2025-09-16T17:38:35.763Z",
    "formats": {
      "typescript": {
        "sources": {
          "src/app/api/auth/session/route.ts": {
            "lines": 14,
            "tokens": 121,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 8,
            "duplicatedTokens": 67,
            "percentage": 57.14,
            "percentageTokens": 55.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/session/route.test.ts": {
            "lines": 85,
            "tokens": 699,
            "sources": 1,
            "clones": 47,
            "duplicatedLines": 147,
            "duplicatedTokens": 1330,
            "percentage": 172.94,
            "percentageTokens": 190.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/reset-password/route.ts": {
            "lines": 43,
            "tokens": 363,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 48,
            "duplicatedTokens": 476,
            "percentage": 111.63,
            "percentageTokens": 131.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/reset-password/route.test.ts": {
            "lines": 201,
            "tokens": 1350,
            "sources": 1,
            "clones": 98,
            "duplicatedLines": 462,
            "duplicatedTokens": 3405,
            "percentage": 229.85,
            "percentageTokens": 252.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/register/route.ts": {
            "lines": 8,
            "tokens": 85,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 3,
            "duplicatedTokens": 23,
            "percentage": 37.5,
            "percentageTokens": 27.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/register/route.test.ts": {
            "lines": 45,
            "tokens": 375,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 44,
            "duplicatedTokens": 351,
            "percentage": 97.78,
            "percentageTokens": 93.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/logout/route.ts": {
            "lines": 30,
            "tokens": 264,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 9,
            "duplicatedTokens": 83,
            "percentage": 30,
            "percentageTokens": 31.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/logout/route.test.ts": {
            "lines": 118,
            "tokens": 975,
            "sources": 1,
            "clones": 53,
            "duplicatedLines": 157,
            "duplicatedTokens": 1207,
            "percentage": 133.05,
            "percentageTokens": 123.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/login/route.ts": {
            "lines": 39,
            "tokens": 376,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 45,
            "duplicatedTokens": 379,
            "percentage": 115.38,
            "percentageTokens": 100.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/login/route.test.ts": {
            "lines": 185,
            "tokens": 1473,
            "sources": 1,
            "clones": 47,
            "duplicatedLines": 229,
            "duplicatedTokens": 1712,
            "percentage": 123.78,
            "percentageTokens": 116.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/forgot-password/route.ts": {
            "lines": 31,
            "tokens": 269,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 26,
            "duplicatedTokens": 240,
            "percentage": 83.87,
            "percentageTokens": 89.22,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/forgot-password/route.test.ts": {
            "lines": 158,
            "tokens": 1187,
            "sources": 1,
            "clones": 26,
            "duplicatedLines": 161,
            "duplicatedTokens": 1190,
            "percentage": 101.9,
            "percentageTokens": 100.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/test-utils.ts": {
            "lines": 403,
            "tokens": 3528,
            "sources": 1,
            "clones": 75,
            "duplicatedLines": 125,
            "duplicatedTokens": 1569,
            "percentage": 31.02,
            "percentageTokens": 44.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/setup.ts": {
            "lines": 28,
            "tokens": 215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/registration-handler.ts": {
            "lines": 64,
            "tokens": 547,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 21,
            "duplicatedTokens": 214,
            "percentage": 32.81,
            "percentageTokens": 39.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/registration-handler.test.ts": {
            "lines": 209,
            "tokens": 1731,
            "sources": 1,
            "clones": 55,
            "duplicatedLines": 259,
            "duplicatedTokens": 1951,
            "percentage": 123.92,
            "percentageTokens": 112.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/profile-utils.ts": {
            "lines": 40,
            "tokens": 271,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/profile-utils.test.ts": {
            "lines": 88,
            "tokens": 745,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 46,
            "duplicatedTokens": 420,
            "percentage": 52.27,
            "percentageTokens": 56.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth-api-utils.ts": {
            "lines": 92,
            "tokens": 856,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 16,
            "duplicatedTokens": 145,
            "percentage": 17.39,
            "percentageTokens": 16.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth-api-utils.test.ts": {
            "lines": 307,
            "tokens": 2847,
            "sources": 1,
            "clones": 79,
            "duplicatedLines": 213,
            "duplicatedTokens": 1772,
            "percentage": 69.38,
            "percentageTokens": 62.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAuthRedirect.ts": {
            "lines": 32,
            "tokens": 251,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 2,
            "duplicatedTokens": 22,
            "percentage": 6.25,
            "percentageTokens": 8.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAuthForm.ts": {
            "lines": 68,
            "tokens": 641,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 5,
            "duplicatedTokens": 49,
            "percentage": 7.35,
            "percentageTokens": 7.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware.ts": {
            "lines": 33,
            "tokens": 306,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 10,
            "duplicatedTokens": 92,
            "percentage": 30.3,
            "percentageTokens": 30.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware.test.ts": {
            "lines": 150,
            "tokens": 1254,
            "sources": 1,
            "clones": 46,
            "duplicatedLines": 176,
            "duplicatedTokens": 1437,
            "percentage": 117.33,
            "percentageTokens": 114.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 2471,
          "tokens": 20729,
          "sources": 24,
          "clones": 305,
          "duplicatedLines": 1106,
          "duplicatedTokens": 9067,
          "percentage": 44.76,
          "percentageTokens": 43.74,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 2471,
      "tokens": 20729,
      "sources": 24,
      "clones": 305,
      "duplicatedLines": 1106,
      "duplicatedTokens": 9067,
      "percentage": 44.76,
      "percentageTokens": 43.74,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "= {\n        json: () => Promise.resolve({ error",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 54,
        "end": 55,
        "startLoc": {
          "line": 54,
          "column": 2,
          "position": 459
        },
        "endLoc": {
          "line": 55,
          "column": 6,
          "position": 478
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 41,
        "end": 42,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 354
        },
        "endLoc": {
          "line": 42,
          "column": 14,
          "position": 373
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "expect(authApiUtils.validateSession).toHaveBeenCalledWith(true)\n      expect(response",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 65,
        "end": 66,
        "startLoc": {
          "line": 65,
          "column": 7,
          "position": 532
        },
        "endLoc": {
          "line": 66,
          "column": 9,
          "position": 547
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 28,
        "end": 29,
        "startLoc": {
          "line": 28,
          "column": 5,
          "position": 232
        },
        "endLoc": {
          "line": 29,
          "column": 13,
          "position": 247
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const mockSession = {\n        user: null",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 70,
        "end": 72,
        "startLoc": {
          "line": 70,
          "column": 39,
          "position": 578
        },
        "endLoc": {
          "line": 72,
          "column": 5,
          "position": 602
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 37,
        "end": 39,
        "startLoc": {
          "line": 37,
          "column": 61,
          "position": 303
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 327
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "}\n      const mockSuccessResponse = {\n        json: () => Promise.resolve({ authenticated: true, user: null",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 73,
        "end": 75,
        "startLoc": {
          "line": 73,
          "column": 7,
          "position": 605
        },
        "endLoc": {
          "line": 75,
          "column": 5,
          "position": 640
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 40,
        "end": 42,
        "startLoc": {
          "line": 40,
          "column": 7,
          "position": 347
        },
        "endLoc": {
          "line": 42,
          "column": 12,
          "position": 382
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "})\n      }\n\n      setupSuccessTest(mockSession, mockSuccessResponse)\n\n      const response = await GET()\n\n      expectSuccessTest(mockSession)\n      expect(response).toBe(mockSuccessResponse)\n    })\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 75,
        "end": 85,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 642
        },
        "endLoc": {
          "line": 85,
          "column": 2,
          "position": 695
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 42,
        "end": 53,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 386
        },
        "endLoc": {
          "line": 53,
          "column": 3,
          "position": 440
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "export async function GET() {\r\n  const { session, error } = await validateSession()",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 33,
        "end": 34,
        "startLoc": {
          "line": 33,
          "column": 1,
          "position": 276
        },
        "endLoc": {
          "line": 34,
          "column": 2,
          "position": 307
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.ts",
        "start": 3,
        "end": 4,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 18
        },
        "endLoc": {
          "line": 4,
          "column": 5,
          "position": 49
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ")\r\n\r\n  if (error) {\r\n    return error\r\n  }\r\n\r\n  return createSuccessResponse({\r\n    isValid",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 34,
        "end": 41,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 307
        },
        "endLoc": {
          "line": 41,
          "column": 8,
          "position": 343
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.ts",
        "start": 4,
        "end": 11,
        "startLoc": {
          "line": 4,
          "column": 5,
          "position": 50
        },
        "endLoc": {
          "line": 11,
          "column": 14,
          "position": 86
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "import { describe, it, expect, vi, beforeEach } from 'vitest'\nimport { POST",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 2,
        "end": 3,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 2
        },
        "endLoc": {
          "line": 3,
          "column": 5,
          "position": 30
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 4,
          "position": 28
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "GET } from './route'\nimport { TEST_CONSTANTS } from '../../../../test/test-utils'\n\n// Mock NextRequest",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 3,
        "end": 6,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 33
        },
        "endLoc": {
          "line": 6,
          "column": 20,
          "position": 54
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 2,
        "end": 5,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 28
        },
        "endLoc": {
          "line": 5,
          "column": 34,
          "position": 49
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "vi.mock('@/lib/auth-api-utils', () => ({\n  parseRequestBody",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 12,
        "end": 13,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 98
        },
        "endLoc": {
          "line": 13,
          "column": 17,
          "position": 114
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 6,
        "end": 7,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 51
        },
        "endLoc": {
          "line": 7,
          "column": 22,
          "position": 67
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "createSuccessResponse: vi.fn(),\n  validateSession: vi.fn()\n}))\n// jscpd:ignore-end",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 15,
        "end": 18,
        "startLoc": {
          "line": 15,
          "column": 3,
          "position": 136
        },
        "endLoc": {
          "line": 18,
          "column": 20,
          "position": 160
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 7,
        "end": 11,
        "startLoc": {
          "line": 7,
          "column": 3,
          "position": 67
        },
        "endLoc": {
          "line": 11,
          "column": 9,
          "position": 92
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ": any\n\n  beforeEach(async () => {\n    vi.clearAllMocks()\n\n    authApiUtils = await import('@/lib/auth-api-utils')\n    supabase",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 31,
        "end": 37,
        "startLoc": {
          "line": 31,
          "column": 9,
          "position": 244
        },
        "endLoc": {
          "line": 37,
          "column": 9,
          "position": 282
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 12,
        "end": 17,
        "startLoc": {
          "line": 12,
          "column": 13,
          "position": 108
        },
        "endLoc": {
          "line": 17,
          "column": 2,
          "position": 145
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "error: null\n      })\n\n      authApiUtils.createSuccessResponse.mockReturnValue(mockSuccessResponse)\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 58,
        "end": 63,
        "startLoc": {
          "line": 58,
          "column": 9,
          "position": 422
        },
        "endLoc": {
          "line": 63,
          "column": 6,
          "position": 444
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 22,
        "end": 25,
        "startLoc": {
          "line": 22,
          "column": 7,
          "position": 190
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 210
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n      expect(authApiUtils.createSuccessResponse).toHaveBeenCalledWith({\n        message",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 68,
        "end": 70,
        "startLoc": {
          "line": 68,
          "column": 2,
          "position": 503
        },
        "endLoc": {
          "line": 70,
          "column": 8,
          "position": 518
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 28,
        "end": 30,
        "startLoc": {
          "line": 28,
          "column": 5,
          "position": 242
        },
        "endLoc": {
          "line": 30,
          "column": 14,
          "position": 257
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n      expect(response).toBe(mockSuccessResponse)\n    })\n    // jscpd:ignore-end",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 71,
        "end": 74,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 525
        },
        "endLoc": {
          "line": 74,
          "column": 20,
          "position": 543
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 49,
        "end": 53,
        "startLoc": {
          "line": 49,
          "column": 12,
          "position": 421
        },
        "endLoc": {
          "line": 53,
          "column": 3,
          "position": 440
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const request = mockRequest(validResetPasswordData)\n      const supabaseError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 94,
        "end": 96,
        "startLoc": {
          "line": 94,
          "column": 43,
          "position": 558
        },
        "endLoc": {
          "line": 96,
          "column": 14,
          "position": 584
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 48,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 48,
          "column": 20,
          "position": 367
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: validResetPasswordData,\n        error: null\n      })\n\n      supabase.auth.updateUser.mockResolvedValue({\n        error: supabaseError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 97,
        "end": 105,
        "startLoc": {
          "line": 97,
          "column": 2,
          "position": 611
        },
        "endLoc": {
          "line": 105,
          "column": 14,
          "position": 656
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 58,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 58,
          "column": 5,
          "position": 425
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n\n      const response = await POST(request)\n\n      expect(supabase",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 108,
        "end": 112,
        "startLoc": {
          "line": 108,
          "column": 18,
          "position": 671
        },
        "endLoc": {
          "line": 112,
          "column": 9,
          "position": 692
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 61,
        "end": 65,
        "startLoc": {
          "line": 61,
          "column": 20,
          "position": 440
        },
        "endLoc": {
          "line": 65,
          "column": 13,
          "position": 461
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ")\n\n      expect(supabase.auth.updateUser).toHaveBeenCalledWith({\n        password: validResetPasswordData.password\n      })\n      expect(authApiUtils.handleSupabaseError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 110,
        "end": 115,
        "startLoc": {
          "line": 110,
          "column": 8,
          "position": 686
        },
        "endLoc": {
          "line": 115,
          "column": 20,
          "position": 720
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 65,
        "end": 69,
        "startLoc": {
          "line": 65,
          "column": 2,
          "position": 477
        },
        "endLoc": {
          "line": 69,
          "column": 22,
          "position": 510
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: null",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 124,
        "end": 127,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 805
        },
        "endLoc": {
          "line": 127,
          "column": 5,
          "position": 821
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 53,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 53,
          "column": 23,
          "position": 396
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ")\n\n      const response = await POST(request)\n\n      expect(authApiUtils.parseRequestBody).toHaveBeenCalledWith(request, expect.any(Object))\n      expect(supabase.auth.updateUser).not",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 129,
        "end": 134,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 832
        },
        "endLoc": {
          "line": 134,
          "column": 4,
          "position": 881
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 61,
        "end": 66,
        "startLoc": {
          "line": 61,
          "column": 20,
          "position": 440
        },
        "endLoc": {
          "line": 66,
          "column": 21,
          "position": 489
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "describe('GET', () => {\n    it('should return valid session when user is authenticated'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 139,
        "end": 140,
        "startLoc": {
          "line": 139,
          "column": 3,
          "position": 908
        },
        "endLoc": {
          "line": 140,
          "column": 57,
          "position": 923
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 36,
        "end": 37,
        "startLoc": {
          "line": 36,
          "column": 3,
          "position": 287
        },
        "endLoc": {
          "line": 37,
          "column": 61,
          "position": 302
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const mockSession = {\n        user: { id: TEST_CONSTANTS.USER_ID, email: TEST_CONSTANTS.EMAIL },",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 140,
        "end": 142,
        "startLoc": {
          "line": 140,
          "column": 57,
          "position": 924
        },
        "endLoc": {
          "line": 142,
          "column": 2,
          "position": 966
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 37,
        "end": 40,
        "startLoc": {
          "line": 37,
          "column": 61,
          "position": 303
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 347
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "}\n\n      authApiUtils.validateSession.mockResolvedValue({\n        session: mockSession,\n        error: null\n      })\n\n      authApiUtils.createSuccessResponse.mockReturnValue(mockSuccessResponse)\n\n      const response = await GET",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 148,
        "end": 157,
        "startLoc": {
          "line": 148,
          "column": 7,
          "position": 1000
        },
        "endLoc": {
          "line": 157,
          "column": 4,
          "position": 1050
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 56,
        "end": 63,
        "startLoc": {
          "line": 56,
          "column": 7,
          "position": 487
        },
        "endLoc": {
          "line": 63,
          "column": 5,
          "position": 452
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n\n      const response = await GET()\n\n      expect(authApiUtils.validateSession).toHaveBeenCalledWith()",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 155,
        "end": 159,
        "startLoc": {
          "line": 155,
          "column": 20,
          "position": 1038
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1065
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 61,
        "end": 65,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 514
        },
        "endLoc": {
          "line": 65,
          "column": 5,
          "position": 541
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n      expect(authApiUtils.createSuccessResponse).toHaveBeenCalledWith({\n        isValid",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 159,
        "end": 161,
        "startLoc": {
          "line": 159,
          "column": 2,
          "position": 1065
        },
        "endLoc": {
          "line": 161,
          "column": 8,
          "position": 1080
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 28,
        "end": 30,
        "startLoc": {
          "line": 28,
          "column": 5,
          "position": 242
        },
        "endLoc": {
          "line": 30,
          "column": 14,
          "position": 257
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "})\n      expect(response).toBe(mockSuccessResponse)\n    })\n\n    it('should return error when session validation fails'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 163,
        "end": 167,
        "startLoc": {
          "line": 163,
          "column": 7,
          "position": 1093
        },
        "endLoc": {
          "line": 167,
          "column": 52,
          "position": 1115
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 71,
        "end": 53,
        "startLoc": {
          "line": 71,
          "column": 7,
          "position": 524
        },
        "endLoc": {
          "line": 53,
          "column": 61,
          "position": 442
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const mockError = {\n        error",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 167,
        "end": 169,
        "startLoc": {
          "line": 167,
          "column": 52,
          "position": 1116
        },
        "endLoc": {
          "line": 169,
          "column": 6,
          "position": 1137
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 53,
        "end": 55,
        "startLoc": {
          "line": 53,
          "column": 61,
          "position": 443
        },
        "endLoc": {
          "line": 55,
          "column": 5,
          "position": 464
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n\n      authApiUtils.validateSession.mockResolvedValue({\n        session: null,\n        error: mockError\n      })\n\n      const response = await GET()\n\n      expect(authApiUtils.validateSession).toHaveBeenCalledWith()\n      expect(authApiUtils.createSuccessResponse).not",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 171,
        "end": 181,
        "startLoc": {
          "line": 171,
          "column": 7,
          "position": 1150
        },
        "endLoc": {
          "line": 181,
          "column": 4,
          "position": 1214
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 56,
        "end": 160,
        "startLoc": {
          "line": 56,
          "column": 7,
          "position": 487
        },
        "endLoc": {
          "line": 160,
          "column": 21,
          "position": 1075
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n      expect(authApiUtils.createSuccessResponse).not.toHaveBeenCalled()\n      expect",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 180,
        "end": 182,
        "startLoc": {
          "line": 180,
          "column": 2,
          "position": 1204
        },
        "endLoc": {
          "line": 182,
          "column": 7,
          "position": 1221
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 66,
        "end": 68,
        "startLoc": {
          "line": 66,
          "column": 10,
          "position": 553
        },
        "endLoc": {
          "line": 68,
          "column": 2,
          "position": 570
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ").not.toHaveBeenCalled()\n      expect(response).toBe(mockError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 181,
        "end": 182,
        "startLoc": {
          "line": 181,
          "column": 22,
          "position": 1212
        },
        "endLoc": {
          "line": 182,
          "column": 10,
          "position": 1228
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 134,
        "end": 135,
        "startLoc": {
          "line": 134,
          "column": 11,
          "position": 879
        },
        "endLoc": {
          "line": 135,
          "column": 15,
          "position": 895
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n      expect(response).toBe(mockError)\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 181,
        "end": 183,
        "startLoc": {
          "line": 181,
          "column": 2,
          "position": 1218
        },
        "endLoc": {
          "line": 183,
          "column": 2,
          "position": 1232
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 65,
        "end": 67,
        "startLoc": {
          "line": 65,
          "column": 5,
          "position": 542
        },
        "endLoc": {
          "line": 67,
          "column": 7,
          "position": 556
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const mockError = {\n        error: 'No active session'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 185,
        "end": 187,
        "startLoc": {
          "line": 185,
          "column": 53,
          "position": 1240
        },
        "endLoc": {
          "line": 187,
          "column": 20,
          "position": 1264
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 53,
        "end": 169,
        "startLoc": {
          "line": 53,
          "column": 61,
          "position": 443
        },
        "endLoc": {
          "line": 169,
          "column": 15,
          "position": 1140
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n        status: 401\n      }\n\n      authApiUtils.validateSession.mockResolvedValue({\n        session: null,\n        error: mockError\n      })\n\n      const response = await GET()\n\n      expect(authApiUtils.validateSession).toHaveBeenCalledWith()\n      expect(response",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 187,
        "end": 199,
        "startLoc": {
          "line": 187,
          "column": 20,
          "position": 1265
        },
        "endLoc": {
          "line": 199,
          "column": 9,
          "position": 1333
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 169,
        "end": 160,
        "startLoc": {
          "line": 169,
          "column": 15,
          "position": 1141
        },
        "endLoc": {
          "line": 160,
          "column": 13,
          "position": 1070
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "()\n      expect(response).toBe(mockError)\n    })\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 198,
        "end": 201,
        "startLoc": {
          "line": 198,
          "column": 21,
          "position": 1327
        },
        "endLoc": {
          "line": 201,
          "column": 2,
          "position": 1346
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 181,
        "end": 185,
        "startLoc": {
          "line": 181,
          "column": 17,
          "position": 1217
        },
        "endLoc": {
          "line": 185,
          "column": 3,
          "position": 1237
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\r\n\r\nexport async function POST(request: NextRequest) {\r\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\register\\route.ts",
        "start": 5,
        "end": 8,
        "startLoc": {
          "line": 5,
          "column": 2,
          "position": 51
        },
        "endLoc": {
          "line": 8,
          "column": 7,
          "position": 74
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 11,
        "end": 14,
        "startLoc": {
          "line": 11,
          "column": 2,
          "position": 110
        },
        "endLoc": {
          "line": 14,
          "column": 6,
          "position": 133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "// jscpd:ignore-start - Test boilerplate patterns are inherently repetitive\nimport { describe, it, expect, vi, beforeEach,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 2,
          "position": 19
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 1,
        "end": 1,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 1,
          "column": 2,
          "position": 18
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "import { TEST_CONSTANTS } from '../../../../test/test-utils'\n\n// Mock NextRequest\nconst mockRequest = (body: any): any => ({\n  json: vi.fn().mockResolvedValue(body)\n})\n\n// Mock registration-handler",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 6,
        "end": 13,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 65
        },
        "endLoc": {
          "line": 13,
          "column": 29,
          "position": 120
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 4,
        "end": 11,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 41
        },
        "endLoc": {
          "line": 11,
          "column": 23,
          "position": 96
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = mockRequest(validRegisterData",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 34,
        "end": 35,
        "startLoc": {
          "line": 34,
          "column": 64,
          "position": 267
        },
        "endLoc": {
          "line": 35,
          "column": 18,
          "position": 287
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 47,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 47,
          "column": 23,
          "position": 361
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n\n      const response = await POST(request)\n\n      expect(mockHandleRegistration",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 38,
        "end": 42,
        "startLoc": {
          "line": 38,
          "column": 13,
          "position": 318
        },
        "endLoc": {
          "line": 42,
          "column": 23,
          "position": 339
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 61,
        "end": 65,
        "startLoc": {
          "line": 61,
          "column": 20,
          "position": 440
        },
        "endLoc": {
          "line": 65,
          "column": 13,
          "position": 461
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ").toHaveBeenCalledWith(request, expect.any(Object))\n      expect(response",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 42,
        "end": 43,
        "startLoc": {
          "line": 42,
          "column": 23,
          "position": 340
        },
        "endLoc": {
          "line": 43,
          "column": 9,
          "position": 358
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 65,
        "end": 66,
        "startLoc": {
          "line": 65,
          "column": 17,
          "position": 464
        },
        "endLoc": {
          "line": 66,
          "column": 9,
          "position": 482
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "import { describe, it, expect, vi, beforeEach } from 'vitest'\nimport { POST }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 2,
          "position": 30
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 1,
        "end": 3,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 3,
          "column": 2,
          "position": 31
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ": vi.fn()\n}))\n\ndescribe('/api/auth/logout'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 13,
        "end": 16,
        "startLoc": {
          "line": 13,
          "column": 27,
          "position": 97
        },
        "endLoc": {
          "line": 16,
          "column": 19,
          "position": 112
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 8,
        "end": 11,
        "startLoc": {
          "line": 8,
          "column": 16,
          "position": 79
        },
        "endLoc": {
          "line": 11,
          "column": 20,
          "position": 94
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "beforeEach(async () => {\n    vi.clearAllMocks()\n    console",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 27,
        "end": 29,
        "startLoc": {
          "line": 27,
          "column": 3,
          "position": 182
        },
        "endLoc": {
          "line": 29,
          "column": 8,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 14,
        "end": 16,
        "startLoc": {
          "line": 14,
          "column": 3,
          "position": 114
        },
        "endLoc": {
          "line": 16,
          "column": 13,
          "position": 133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "})\n\n  describe('POST', () => {\n    it",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 41,
        "end": 44,
        "startLoc": {
          "line": 41,
          "column": 3,
          "position": 302
        },
        "endLoc": {
          "line": 44,
          "column": 3,
          "position": 320
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 38,
        "end": 41,
        "startLoc": {
          "line": 38,
          "column": 3,
          "position": 298
        },
        "endLoc": {
          "line": 41,
          "column": 6,
          "position": 316
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "describe('POST', () => {\n    it('should successfully sign out user'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 43,
        "end": 44,
        "startLoc": {
          "line": 43,
          "column": 3,
          "position": 307
        },
        "endLoc": {
          "line": 44,
          "column": 36,
          "position": 322
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 33,
        "end": 34,
        "startLoc": {
          "line": 33,
          "column": 3,
          "position": 251
        },
        "endLoc": {
          "line": 34,
          "column": 64,
          "position": 266
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ".mockReturnValue(mockSuccessResponse)\n\n      const response = await POST()",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 48,
        "end": 50,
        "startLoc": {
          "line": 48,
          "column": 5,
          "position": 370
        },
        "endLoc": {
          "line": 50,
          "column": 2,
          "position": 388
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 61,
        "end": 63,
        "startLoc": {
          "line": 61,
          "column": 22,
          "position": 436
        },
        "endLoc": {
          "line": 63,
          "column": 8,
          "position": 454
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "})\n      expect(response).toBe(mockSuccessResponse)\n    })\n\n    it('should return error when signOut fails'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 60,
        "end": 64,
        "startLoc": {
          "line": 60,
          "column": 7,
          "position": 464
        },
        "endLoc": {
          "line": 64,
          "column": 41,
          "position": 486
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 71,
        "end": 53,
        "startLoc": {
          "line": 71,
          "column": 7,
          "position": 524
        },
        "endLoc": {
          "line": 53,
          "column": 61,
          "position": 442
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ".mockReturnValue(mockErrorResponse)\n\n      const response = await POST()",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 69,
        "end": 71,
        "startLoc": {
          "line": 69,
          "column": 5,
          "position": 549
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 567
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 108,
        "end": 110,
        "startLoc": {
          "line": 108,
          "column": 20,
          "position": 667
        },
        "endLoc": {
          "line": 110,
          "column": 8,
          "position": 685
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n\n      const response = await POST()\n\n      expect(mockSignOut",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 69,
        "end": 73,
        "startLoc": {
          "line": 69,
          "column": 18,
          "position": 553
        },
        "endLoc": {
          "line": 73,
          "column": 12,
          "position": 573
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 48,
        "end": 52,
        "startLoc": {
          "line": 48,
          "column": 20,
          "position": 374
        },
        "endLoc": {
          "line": 52,
          "column": 15,
          "position": 394
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "()\n\n      expect(mockSignOut).toHaveBeenCalled()\n      expect(NextResponse.json).toHaveBeenCalledWith(\n        { error",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 71,
        "end": 75,
        "startLoc": {
          "line": 71,
          "column": 5,
          "position": 566
        },
        "endLoc": {
          "line": 75,
          "column": 6,
          "position": 594
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 52,
        "end": 55,
        "startLoc": {
          "line": 52,
          "column": 17,
          "position": 400
        },
        "endLoc": {
          "line": 55,
          "column": 8,
          "position": 426
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "}\n      )\n      expect(console.log).toHaveBeenCalledWith('Logout attempt:', {\n        success: false",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 76,
        "end": 79,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 612
        },
        "endLoc": {
          "line": 79,
          "column": 6,
          "position": 636
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 56,
        "end": 58,
        "startLoc": {
          "line": 56,
          "column": 7,
          "position": 432
        },
        "endLoc": {
          "line": 58,
          "column": 5,
          "position": 454
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n      expect(response).toBe(mockErrorResponse)\n    })\n\n    it('should handle unexpected errors'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 81,
        "end": 85,
        "startLoc": {
          "line": 81,
          "column": 2,
          "position": 649
        },
        "endLoc": {
          "line": 85,
          "column": 34,
          "position": 670
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 115,
        "end": 119,
        "startLoc": {
          "line": 115,
          "column": 14,
          "position": 726
        },
        "endLoc": {
          "line": 119,
          "column": 42,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ")\n      NextResponse.json.mockReturnValue(mockErrorResponse)\n\n      const response = await POST()\n\n      expect(NextResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 89,
        "end": 94,
        "startLoc": {
          "line": 89,
          "column": 16,
          "position": 723
        },
        "endLoc": {
          "line": 94,
          "column": 13,
          "position": 753
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 68,
        "end": 52,
        "startLoc": {
          "line": 68,
          "column": 2,
          "position": 543
        },
        "endLoc": {
          "line": 52,
          "column": 15,
          "position": 394
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "()\n\n      expect(NextResponse.json).toHaveBeenCalledWith(\n        { error: ERROR_MESSAGES.INTERNAL_SERVER_ERROR",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 92,
        "end": 95,
        "startLoc": {
          "line": 92,
          "column": 5,
          "position": 746
        },
        "endLoc": {
          "line": 95,
          "column": 22,
          "position": 769
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 53,
        "end": 75,
        "startLoc": {
          "line": 53,
          "column": 17,
          "position": 410
        },
        "endLoc": {
          "line": 75,
          "column": 16,
          "position": 599
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n      expect(response).toBe(mockErrorResponse)\n    })\n\n    it('should handle supabase client creation failure'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 98,
        "end": 102,
        "startLoc": {
          "line": 98,
          "column": 16,
          "position": 801
        },
        "endLoc": {
          "line": 102,
          "column": 49,
          "position": 822
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 115,
        "end": 119,
        "startLoc": {
          "line": 115,
          "column": 14,
          "position": 726
        },
        "endLoc": {
          "line": 119,
          "column": 42,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n      const mockErrorResponse = { error: ERROR_MESSAGES.INTERNAL_SERVER_ERROR }\n\n      supabaseServer.createSupabaseServerClient.mockRejectedValue(clientError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 103,
        "end": 106,
        "startLoc": {
          "line": 103,
          "column": 26,
          "position": 846
        },
        "endLoc": {
          "line": 106,
          "column": 12,
          "position": 874
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 86,
        "end": 89,
        "startLoc": {
          "line": 86,
          "column": 19,
          "position": 694
        },
        "endLoc": {
          "line": 89,
          "column": 16,
          "position": 722
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ")\n      NextResponse.json.mockReturnValue(mockErrorResponse)\n\n      const response = await POST()\n\n      expect(console",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 106,
        "end": 111,
        "startLoc": {
          "line": 106,
          "column": 12,
          "position": 875
        },
        "endLoc": {
          "line": 111,
          "column": 8,
          "position": 905
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 68,
        "end": 52,
        "startLoc": {
          "line": 68,
          "column": 2,
          "position": 543
        },
        "endLoc": {
          "line": 52,
          "column": 15,
          "position": 394
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n\n      expect(console.error).toHaveBeenCalledWith('Logout error:', clientError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 109,
        "end": 111,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 899
        },
        "endLoc": {
          "line": 111,
          "column": 12,
          "position": 915
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 97,
        "end": 98,
        "startLoc": {
          "line": 97,
          "column": 7,
          "position": 785
        },
        "endLoc": {
          "line": 98,
          "column": 16,
          "position": 800
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ")\n      expect(NextResponse.json).toHaveBeenCalledWith(\n        { error: ERROR_MESSAGES.INTERNAL_SERVER_ERROR },\n        { status: 500 }\n      )\n      expect(response",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 111,
        "end": 116,
        "startLoc": {
          "line": 111,
          "column": 12,
          "position": 916
        },
        "endLoc": {
          "line": 116,
          "column": 9,
          "position": 958
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 53,
        "end": 98,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 411
        },
        "endLoc": {
          "line": 98,
          "column": 8,
          "position": 790
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "}\n      )\n      expect(response).toBe(mockErrorResponse)\n    })\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 114,
        "end": 118,
        "startLoc": {
          "line": 114,
          "column": 2,
          "position": 950
        },
        "endLoc": {
          "line": 118,
          "column": 2,
          "position": 971
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 81,
        "end": 119,
        "startLoc": {
          "line": 81,
          "column": 7,
          "position": 648
        },
        "endLoc": {
          "line": 119,
          "column": 3,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "import { NextRequest } from 'next/server'\r\nimport { z } from 'zod'\r\nimport {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 1,
        "end": 3,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 3,
          "column": 2,
          "position": 28
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 1,
        "end": 3,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 3,
          "column": 9,
          "position": 28
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "),\r\n})\r\n\r\nexport async function POST(request: NextRequest) {\r\n  const { data: validatedData, error: parseError } = await parseRequestBody(request, LoginSchema",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 8,
        "end": 12,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 98
        },
        "endLoc": {
          "line": 12,
          "column": 12,
          "position": 152
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 10,
        "end": 14,
        "startLoc": {
          "line": 10,
          "column": 20,
          "position": 105
        },
        "endLoc": {
          "line": 14,
          "column": 20,
          "position": 159
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ")\r\n\r\n  if (parseError) {\r\n    return parseError\r\n  }\r\n\r\n  const supabase",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 12,
        "end": 18,
        "startLoc": {
          "line": 12,
          "column": 12,
          "position": 153
        },
        "endLoc": {
          "line": 18,
          "column": 9,
          "position": 183
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 14,
        "end": 20,
        "startLoc": {
          "line": 14,
          "column": 20,
          "position": 160
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 190
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "success: !error,\r\n    error: error?.message,\r\n    hasUser",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 26,
        "end": 28,
        "startLoc": {
          "line": 26,
          "column": 5,
          "position": 268
        },
        "endLoc": {
          "line": 28,
          "column": 8,
          "position": 288
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.ts",
        "start": 10,
        "end": 12,
        "startLoc": {
          "line": 10,
          "column": 7,
          "position": 97
        },
        "endLoc": {
          "line": 12,
          "column": 2,
          "position": 117
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "})\r\n\r\n  if (error) {\r\n    return handleSupabaseError(error)\r\n  }\r\n\r\n  return createSuccessResponse({\r\n    user",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 30,
        "end": 37,
        "startLoc": {
          "line": 30,
          "column": 3,
          "position": 312
        },
        "endLoc": {
          "line": 37,
          "column": 5,
          "position": 352
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 22,
        "end": 29,
        "startLoc": {
          "line": 22,
          "column": 3,
          "position": 219
        },
        "endLoc": {
          "line": 29,
          "column": 8,
          "position": 259
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "// jscpd:ignore-start - Test boilerplate patterns are inherently repetitive\nimport { describe, it, expect, vi, beforeEach } from 'vitest'\nimport { POST } from './route'\nimport",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 1,
        "end": 4,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 4,
          "column": 7,
          "position": 38
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 1,
        "end": 4,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 4,
          "column": 21,
          "position": 37
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "} from './route'\nimport { TEST_CONSTANTS } from '../../../../test/test-utils'\n\n// Mock NextRequest\nconst mockRequest = (body: any): any => ({\n  json: vi.fn().mockResolvedValue(body)\n})\n\n// Mock auth-api-utils\nvi.mock('@/lib/auth-api-utils', () => ({\n  parseRequestBody: vi.fn(),\n  handleSupabaseError: vi.fn(),\n  createSuccessResponse: vi.fn()\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 3,
        "end": 16,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 32
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 142
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 3,
        "end": 15,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 35
        },
        "endLoc": {
          "line": 15,
          "column": 2,
          "position": 144
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "vi.mock('../../../../../lib/supabase-server', () => ({\n  createSupabaseServerClient: vi.fn()\n}))\n// jscpd:ignore-end\n\ndescribe",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 19,
        "end": 24,
        "startLoc": {
          "line": 19,
          "column": 1,
          "position": 149
        },
        "endLoc": {
          "line": 24,
          "column": 9,
          "position": 181
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 12,
        "end": 20,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 80
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 163
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", () => {\n  let authApiUtils: any\n  let supabaseServer",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 24,
        "end": 26,
        "startLoc": {
          "line": 24,
          "column": 18,
          "position": 184
        },
        "endLoc": {
          "line": 26,
          "column": 15,
          "position": 204
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 29,
        "end": 31,
        "startLoc": {
          "line": 29,
          "column": 27,
          "position": 223
        },
        "endLoc": {
          "line": 31,
          "column": 9,
          "position": 243
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "beforeEach(async () => {\n    vi.clearAllMocks()\n    console.log = vi.fn()\n\n    authApiUtils",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 32,
        "end": 36,
        "startLoc": {
          "line": 32,
          "column": 3,
          "position": 237
        },
        "endLoc": {
          "line": 36,
          "column": 13,
          "position": 270
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 14,
        "end": 30,
        "startLoc": {
          "line": 14,
          "column": 3,
          "position": 114
        },
        "endLoc": {
          "line": 30,
          "column": 8,
          "position": 214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "= vi.fn()\n    mockSupabaseClient = {\n      auth: {\n        signInWithPassword",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 39,
        "end": 42,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 297
        },
        "endLoc": {
          "line": 42,
          "column": 19,
          "position": 319
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 34,
        "end": 37,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 258
        },
        "endLoc": {
          "line": 37,
          "column": 8,
          "position": 280
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "}\n    }\n    supabaseServer.createSupabaseServerClient.mockResolvedValue(mockSupabaseClient)\n  })\n\n  describe('POST', () => {\n    it('should successfully login user with valid credentials'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 43,
        "end": 49,
        "startLoc": {
          "line": 43,
          "column": 7,
          "position": 325
        },
        "endLoc": {
          "line": 49,
          "column": 56,
          "position": 361
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 38,
        "end": 34,
        "startLoc": {
          "line": 38,
          "column": 7,
          "position": 286
        },
        "endLoc": {
          "line": 34,
          "column": 64,
          "position": 266
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "= {\n        email: TEST_CONSTANTS.EMAIL,\n        password: TEST_CONSTANTS.PASSWORD\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 50,
        "end": 53,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 378
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 400
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 26,
        "end": 28,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 211
        },
        "endLoc": {
          "line": 28,
          "column": 2,
          "position": 231
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "{ id: TEST_CONSTANTS.USER_ID, email: TEST_CONSTANTS.EMAIL }\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 56,
        "end": 57,
        "startLoc": {
          "line": 56,
          "column": 2,
          "position": 422
        },
        "endLoc": {
          "line": 57,
          "column": 6,
          "position": 442
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 39,
        "end": 40,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 327
        },
        "endLoc": {
          "line": 40,
          "column": 2,
          "position": 347
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: loginData",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 58,
        "end": 61,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 477
        },
        "endLoc": {
          "line": 61,
          "column": 10,
          "position": 493
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 53,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 53,
          "column": 23,
          "position": 396
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n        error: null\n      })\n\n      authApiUtils.createSuccessResponse.mockReturnValue(mockSuccessResponse)\n\n      const response = await POST(request)\n\n      expect(authApiUtils.parseRequestBody).toHaveBeenCalledWith(request, expect.any(Object))\n      expect(supabaseServer",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 66,
        "end": 75,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 532
        },
        "endLoc": {
          "line": 75,
          "column": 15,
          "position": 595
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 21,
        "end": 66,
        "startLoc": {
          "line": 21,
          "column": 12,
          "position": 187
        },
        "endLoc": {
          "line": 66,
          "column": 9,
          "position": 482
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n      expect(supabaseServer.createSupabaseServerClient).toHaveBeenCalled()\n      expect(mockSignInWithPassword",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 74,
        "end": 76,
        "startLoc": {
          "line": 74,
          "column": 2,
          "position": 590
        },
        "endLoc": {
          "line": 76,
          "column": 23,
          "position": 607
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 50,
        "end": 53,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 388
        },
        "endLoc": {
          "line": 53,
          "column": 12,
          "position": 406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ".password\n      })\n      expect(authApiUtils.createSuccessResponse).toHaveBeenCalledWith({\n        user",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 78,
        "end": 81,
        "startLoc": {
          "line": 78,
          "column": 10,
          "position": 628
        },
        "endLoc": {
          "line": 81,
          "column": 5,
          "position": 648
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 67,
        "end": 30,
        "startLoc": {
          "line": 67,
          "column": 23,
          "position": 498
        },
        "endLoc": {
          "line": 30,
          "column": 14,
          "position": 257
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "})\n      expect(console.log).toHaveBeenCalledWith(loginAttemptMessage",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 83,
        "end": 84,
        "startLoc": {
          "line": 83,
          "column": 7,
          "position": 661
        },
        "endLoc": {
          "line": 84,
          "column": 20,
          "position": 674
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 56,
        "end": 57,
        "startLoc": {
          "line": 56,
          "column": 7,
          "position": 432
        },
        "endLoc": {
          "line": 57,
          "column": 18,
          "position": 445
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "})\n      expect(response).toBe(mockSuccessResponse)\n    })\n\n    it('should return error when request parsing fails'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 90,
        "end": 94,
        "startLoc": {
          "line": 90,
          "column": 7,
          "position": 716
        },
        "endLoc": {
          "line": 94,
          "column": 49,
          "position": 738
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 71,
        "end": 53,
        "startLoc": {
          "line": 71,
          "column": 7,
          "position": 524
        },
        "endLoc": {
          "line": 53,
          "column": 61,
          "position": 442
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = mockRequest({",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 94,
        "end": 95,
        "startLoc": {
          "line": 94,
          "column": 49,
          "position": 739
        },
        "endLoc": {
          "line": 95,
          "column": 2,
          "position": 759
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 47,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 47,
          "column": 23,
          "position": 361
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: null,\n        error: mockParseError\n      })\n\n      const response = await POST(request)\n\n      expect(authApiUtils.parseRequestBody).toHaveBeenCalledWith(request, expect.any(Object))\n      expect(supabaseServer.createSupabaseServerClient).not",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 96,
        "end": 106,
        "startLoc": {
          "line": 96,
          "column": 2,
          "position": 777
        },
        "endLoc": {
          "line": 106,
          "column": 4,
          "position": 851
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 75,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 75,
          "column": 17,
          "position": 600
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ").not.toHaveBeenCalled()\n      expect(response).toBe(mockParseError)\n    })\n\n    it",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 106,
        "end": 110,
        "startLoc": {
          "line": 106,
          "column": 27,
          "position": 849
        },
        "endLoc": {
          "line": 110,
          "column": 3,
          "position": 874
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 134,
        "end": 137,
        "startLoc": {
          "line": 134,
          "column": 11,
          "position": 879
        },
        "endLoc": {
          "line": 137,
          "column": 2,
          "position": 903
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ", async () => {\n      const loginData = {\n        email: TEST_CONSTANTS.EMAIL,\n        password: 'wrongpassword'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 110,
        "end": 113,
        "startLoc": {
          "line": 110,
          "column": 47,
          "position": 877
        },
        "endLoc": {
          "line": 113,
          "column": 16,
          "position": 910
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 49,
        "end": 28,
        "startLoc": {
          "line": 49,
          "column": 56,
          "position": 362
        },
        "endLoc": {
          "line": 28,
          "column": 15,
          "position": 228
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: loginData,\n        error: null\n      })\n\n      mockSignInWithPassword.mockResolvedValue({\n        data: { user: null",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 117,
        "end": 125,
        "startLoc": {
          "line": 117,
          "column": 2,
          "position": 961
        },
        "endLoc": {
          "line": 125,
          "column": 5,
          "position": 1007
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 66,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 66,
          "column": 9,
          "position": 523
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "error: supabaseError\n      })\n\n      authApiUtils.handleSupabaseError.mockReturnValue(mockErrorResponse)\n\n      const response = await POST(request)\n\n      expect(mockSignInWithPassword",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 126,
        "end": 133,
        "startLoc": {
          "line": 126,
          "column": 9,
          "position": 1019
        },
        "endLoc": {
          "line": 133,
          "column": 23,
          "position": 1058
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 105,
        "end": 65,
        "startLoc": {
          "line": 105,
          "column": 9,
          "position": 653
        },
        "endLoc": {
          "line": 65,
          "column": 13,
          "position": 461
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ")\n\n      expect(mockSignInWithPassword).toHaveBeenCalledWith({\n        email: loginData.email,\n        password: loginData.password\n      })\n      expect(authApiUtils.handleSupabaseError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 131,
        "end": 137,
        "startLoc": {
          "line": 131,
          "column": 8,
          "position": 1052
        },
        "endLoc": {
          "line": 137,
          "column": 20,
          "position": 1091
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 75,
        "end": 80,
        "startLoc": {
          "line": 75,
          "column": 2,
          "position": 602
        },
        "endLoc": {
          "line": 80,
          "column": 22,
          "position": 640
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ".password\n      })\n      expect(authApiUtils.handleSupabaseError).toHaveBeenCalledWith(supabaseError)\n      expect(console",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 135,
        "end": 138,
        "startLoc": {
          "line": 135,
          "column": 10,
          "position": 1079
        },
        "endLoc": {
          "line": 138,
          "column": 8,
          "position": 1102
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 113,
        "end": 116,
        "startLoc": {
          "line": 113,
          "column": 23,
          "position": 708
        },
        "endLoc": {
          "line": 116,
          "column": 9,
          "position": 731
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n      expect(console.log).toHaveBeenCalledWith(loginAttemptMessage, {\n        email: loginData.email,\n        success: false",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 137,
        "end": 140,
        "startLoc": {
          "line": 137,
          "column": 14,
          "position": 1097
        },
        "endLoc": {
          "line": 140,
          "column": 6,
          "position": 1127
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 56,
        "end": 86,
        "startLoc": {
          "line": 56,
          "column": 2,
          "position": 433
        },
        "endLoc": {
          "line": 86,
          "column": 5,
          "position": 692
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "})\n      expect(response).toBe(mockErrorResponse)\n    })\n\n    it('should handle successful login with user but no session'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 144,
        "end": 148,
        "startLoc": {
          "line": 144,
          "column": 7,
          "position": 1153
        },
        "endLoc": {
          "line": 148,
          "column": 58,
          "position": 1175
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 81,
        "end": 119,
        "startLoc": {
          "line": 81,
          "column": 7,
          "position": 648
        },
        "endLoc": {
          "line": 119,
          "column": 42,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", async () => {\n      const loginData = {\n        email: TEST_CONSTANTS.EMAIL,\n        password: TEST_CONSTANTS.PASSWORD\n      }\n      const request = mockRequest(loginData)\n\n      const mockUser = { id: TEST_CONSTANTS.USER_ID, email: TEST_CONSTANTS.EMAIL }\n      const mockSuccessResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 148,
        "end": 156,
        "startLoc": {
          "line": 148,
          "column": 58,
          "position": 1176
        },
        "endLoc": {
          "line": 156,
          "column": 20,
          "position": 1258
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 49,
        "end": 57,
        "startLoc": {
          "line": 49,
          "column": 56,
          "position": 362
        },
        "endLoc": {
          "line": 57,
          "column": 12,
          "position": 444
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "}\n      const mockSuccessResponse = { user: mockUser, session: null",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 155,
        "end": 156,
        "startLoc": {
          "line": 155,
          "column": 2,
          "position": 1253
        },
        "endLoc": {
          "line": 156,
          "column": 5,
          "position": 1273
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 57,
        "end": 58,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 455
        },
        "endLoc": {
          "line": 58,
          "column": 12,
          "position": 475
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: loginData,\n        error: null\n      })\n\n      mockSignInWithPassword.mockResolvedValue({\n        data: { user: mockUser, session: null",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 156,
        "end": 164,
        "startLoc": {
          "line": 156,
          "column": 2,
          "position": 1275
        },
        "endLoc": {
          "line": 164,
          "column": 5,
          "position": 1327
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 66,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 66,
          "column": 12,
          "position": 529
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "},\n        error: null\n      })\n\n      authApiUtils.createSuccessResponse.mockReturnValue(mockSuccessResponse)\n\n      const response = await POST(request)\n\n      expect(authApiUtils.createSuccessResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 164,
        "end": 172,
        "startLoc": {
          "line": 164,
          "column": 2,
          "position": 1329
        },
        "endLoc": {
          "line": 172,
          "column": 22,
          "position": 1374
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 66,
        "end": 65,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 531
        },
        "endLoc": {
          "line": 65,
          "column": 17,
          "position": 463
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n\n      expect(authApiUtils.createSuccessResponse).toHaveBeenCalledWith({\n        user: mockUser,\n        session: null",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 170,
        "end": 174,
        "startLoc": {
          "line": 170,
          "column": 8,
          "position": 1366
        },
        "endLoc": {
          "line": 174,
          "column": 5,
          "position": 1392
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 28,
        "end": 82,
        "startLoc": {
          "line": 28,
          "column": 5,
          "position": 242
        },
        "endLoc": {
          "line": 82,
          "column": 12,
          "position": 658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "})\n      expect(console.log).toHaveBeenCalledWith(loginAttemptMessage, {\n        email: loginData.email,\n        success: true,\n        error: undefined,\n        hasUser: true,\n        hasSession: false",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 175,
        "end": 181,
        "startLoc": {
          "line": 175,
          "column": 7,
          "position": 1395
        },
        "endLoc": {
          "line": 181,
          "column": 6,
          "position": 1447
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 56,
        "end": 89,
        "startLoc": {
          "line": 56,
          "column": 7,
          "position": 432
        },
        "endLoc": {
          "line": 89,
          "column": 5,
          "position": 713
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ",\n        hasSession: false\n      })\n      expect(response).toBe(mockSuccessResponse)\n    })\n  })\n})",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 180,
        "end": 186,
        "startLoc": {
          "line": 180,
          "column": 5,
          "position": 1441
        },
        "endLoc": {
          "line": 186,
          "column": 2,
          "position": 1473
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 142,
        "end": 86,
        "startLoc": {
          "line": 142,
          "column": 6,
          "position": 1144
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 699
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "import { NextRequest } from 'next/server'\r\nimport { z } from 'zod'\r\nimport supabase from '../../../../../lib/supabase'\r\nimport { parseRequestBody, handleSupabaseError, createSuccessResponse }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.ts",
        "start": 1,
        "end": 4,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 4,
          "column": 2,
          "position": 47
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 1,
        "end": 4,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 4,
          "column": 2,
          "position": 46
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "import { parseRequestBody, handleSupabaseError, createSuccessResponse } from '@/lib/auth-api-utils'\r\n\r\nconst ForgotPasswordSchema",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.ts",
        "start": 4,
        "end": 6,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 35
        },
        "endLoc": {
          "line": 6,
          "column": 21,
          "position": 58
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 4,
        "end": 6,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 39
        },
        "endLoc": {
          "line": 6,
          "column": 12,
          "position": 62
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "= z.object({\r\n  email: z.email(),\r\n  redirectTo",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.ts",
        "start": 6,
        "end": 8,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 60
        },
        "endLoc": {
          "line": 8,
          "column": 11,
          "position": 82
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 6,
        "end": 8,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 64
        },
        "endLoc": {
          "line": 8,
          "column": 9,
          "position": 86
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "),\r\n})\r\n\r\nexport async function POST(request: NextRequest) {\r\n  const { data: validatedData, error: parseError } = await parseRequestBody(request, ForgotPasswordSchema",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.ts",
        "start": 8,
        "end": 12,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 89
        },
        "endLoc": {
          "line": 12,
          "column": 21,
          "position": 143
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 10,
        "end": 14,
        "startLoc": {
          "line": 10,
          "column": 20,
          "position": 105
        },
        "endLoc": {
          "line": 14,
          "column": 20,
          "position": 159
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ")\r\n\r\n  if (parseError) {\r\n    return parseError\r\n  }\r\n\r\n  const { error } = await supabase.auth.resetPasswordForEmail",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.ts",
        "start": 12,
        "end": 18,
        "startLoc": {
          "line": 12,
          "column": 21,
          "position": 144
        },
        "endLoc": {
          "line": 18,
          "column": 22,
          "position": 188
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 14,
        "end": 20,
        "startLoc": {
          "line": 14,
          "column": 20,
          "position": 160
        },
        "endLoc": {
          "line": 20,
          "column": 11,
          "position": 204
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\r\n    }\r\n  )\r\n\r\n  if (error) {\r\n    return handleSupabaseError(error)\r\n  }\r\n\r\n  return createSuccessResponse({\r\n    message: 'Check your email for the password reset link!'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.ts",
        "start": 21,
        "end": 30,
        "startLoc": {
          "line": 21,
          "column": 11,
          "position": 210
        },
        "endLoc": {
          "line": 30,
          "column": 48,
          "position": 260
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 29,
        "end": 29,
        "startLoc": {
          "line": 29,
          "column": 8,
          "position": 308
        },
        "endLoc": {
          "line": 29,
          "column": 25,
          "position": 262
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "// jscpd:ignore-start - Test boilerplate patterns are inherently repetitive\nimport { describe, it, expect, vi, beforeEach } from 'vitest'\nimport { POST } from './route'\nimport { TEST_CONSTANTS } from '../../../../test/test-utils'\n\n// Mock NextRequest\nconst mockRequest = (body: any): any => ({\n  json: vi.fn().mockResolvedValue(body)\n})\n\n// Mock auth-api-utils\nvi.mock('@/lib/auth-api-utils', () => ({\n  parseRequestBody: vi.fn(),\n  handleSupabaseError: vi.fn(),\n  createSuccessResponse: vi.fn()\n}))\n// jscpd:ignore-end\n\n// Mock supabase client\nvi.mock('../../../../../lib/supabase', () => ({\n  default: {\n    auth: {\n      resetPasswordForEmail",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 1,
        "end": 23,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 23,
          "column": 22,
          "position": 186
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 1,
        "end": 24,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 24,
          "column": 11,
          "position": 200
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": vi.fn()\n    }\n  }\n}))\n\ndescribe('/api/auth/forgot-password'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 23,
        "end": 28,
        "startLoc": {
          "line": 23,
          "column": 22,
          "position": 187
        },
        "endLoc": {
          "line": 28,
          "column": 28,
          "position": 208
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 24,
        "end": 29,
        "startLoc": {
          "line": 24,
          "column": 11,
          "position": 201
        },
        "endLoc": {
          "line": 29,
          "column": 27,
          "position": 222
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", () => {\n  let authApiUtils: any\n  let supabase: any\n\n  beforeEach(async () => {\n    vi.clearAllMocks()\n\n    authApiUtils = await import('@/lib/auth-api-utils')\n    supabase = (await import('../../../../../lib/supabase')).default\n  })\n\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 28,
        "end": 39,
        "startLoc": {
          "line": 28,
          "column": 28,
          "position": 209
        },
        "endLoc": {
          "line": 39,
          "column": 6,
          "position": 289
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 29,
        "end": 40,
        "startLoc": {
          "line": 29,
          "column": 27,
          "position": 223
        },
        "endLoc": {
          "line": 40,
          "column": 9,
          "position": 303
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "}\n\n  describe('POST', () => {\n    it('should successfully send password reset email'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 42,
        "end": 45,
        "startLoc": {
          "line": 42,
          "column": 3,
          "position": 313
        },
        "endLoc": {
          "line": 45,
          "column": 48,
          "position": 332
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 31,
        "end": 34,
        "startLoc": {
          "line": 31,
          "column": 3,
          "position": 247
        },
        "endLoc": {
          "line": 34,
          "column": 64,
          "position": 266
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = mockRequest(validForgotPasswordData",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 45,
        "end": 46,
        "startLoc": {
          "line": 45,
          "column": 48,
          "position": 333
        },
        "endLoc": {
          "line": 46,
          "column": 24,
          "position": 353
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 47,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 47,
          "column": 23,
          "position": 361
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: validForgotPasswordData",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 49,
        "end": 52,
        "startLoc": {
          "line": 49,
          "column": 7,
          "position": 372
        },
        "endLoc": {
          "line": 52,
          "column": 24,
          "position": 388
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 53,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 53,
          "column": 23,
          "position": 396
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ",\n        error: null\n      })\n\n      supabase.auth.resetPasswordForEmail",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 52,
        "end": 56,
        "startLoc": {
          "line": 52,
          "column": 24,
          "position": 389
        },
        "endLoc": {
          "line": 56,
          "column": 22,
          "position": 407
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 53,
        "end": 57,
        "startLoc": {
          "line": 53,
          "column": 23,
          "position": 397
        },
        "endLoc": {
          "line": 57,
          "column": 11,
          "position": 415
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ".mockResolvedValue({\n        error: null\n      })\n\n      authApiUtils.createSuccessResponse.mockReturnValue(mockSuccessResponse)\n\n      const response = await POST(request)\n\n      expect(authApiUtils.parseRequestBody).toHaveBeenCalledWith(request, expect.any(Object))\n      expect(supabase.auth.resetPasswordForEmail",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 56,
        "end": 65,
        "startLoc": {
          "line": 56,
          "column": 22,
          "position": 408
        },
        "endLoc": {
          "line": 65,
          "column": 22,
          "position": 478
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 57,
        "end": 66,
        "startLoc": {
          "line": 57,
          "column": 11,
          "position": 416
        },
        "endLoc": {
          "line": 66,
          "column": 11,
          "position": 486
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "}\n      )\n      expect(authApiUtils.createSuccessResponse).toHaveBeenCalledWith({\n        message: 'Check your email for the password reset link!'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 69,
        "end": 72,
        "startLoc": {
          "line": 69,
          "column": 9,
          "position": 502
        },
        "endLoc": {
          "line": 72,
          "column": 48,
          "position": 523
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 68,
        "end": 70,
        "startLoc": {
          "line": 68,
          "column": 7,
          "position": 502
        },
        "endLoc": {
          "line": 70,
          "column": 33,
          "position": 521
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "})\n      expect(response).toBe(mockSuccessResponse)\n    })\n\n    it('should return error when request parsing fails', async () => {\n      const request = mockRequest({})\n      const mockParseError = { error: 'Invalid email format' }\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: null,\n        error: mockParseError\n      })\n\n      const response = await POST(request)\n\n      expect(authApiUtils.parseRequestBody).toHaveBeenCalledWith(request, expect.any(Object))\n      expect(supabase.auth.resetPasswordForEmail).not",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 73,
        "end": 89,
        "startLoc": {
          "line": 73,
          "column": 7,
          "position": 526
        },
        "endLoc": {
          "line": 89,
          "column": 4,
          "position": 663
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 71,
        "end": 65,
        "startLoc": {
          "line": 71,
          "column": 7,
          "position": 524
        },
        "endLoc": {
          "line": 65,
          "column": 21,
          "position": 481
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ").not.toHaveBeenCalled()\n      expect(response).toBe(mockParseError)\n    })\n\n    it('should handle Supabase resetPasswordForEmail errors'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 89,
        "end": 93,
        "startLoc": {
          "line": 89,
          "column": 22,
          "position": 661
        },
        "endLoc": {
          "line": 93,
          "column": 54,
          "position": 688
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 134,
        "end": 110,
        "startLoc": {
          "line": 134,
          "column": 11,
          "position": 879
        },
        "endLoc": {
          "line": 110,
          "column": 47,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const request = mockRequest(validForgotPasswordData)\n      const supabaseError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 93,
        "end": 95,
        "startLoc": {
          "line": 93,
          "column": 54,
          "position": 689
        },
        "endLoc": {
          "line": 95,
          "column": 14,
          "position": 715
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 47,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 47,
          "column": 20,
          "position": 359
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: validForgotPasswordData,\n        error: null\n      })\n\n      supabase.auth.resetPasswordForEmail.mockResolvedValue({\n        error: supabaseError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 96,
        "end": 104,
        "startLoc": {
          "line": 96,
          "column": 2,
          "position": 742
        },
        "endLoc": {
          "line": 104,
          "column": 14,
          "position": 787
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 57,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 57,
          "column": 5,
          "position": 417
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ".mockResolvedValue({\n        error: supabaseError\n      })\n\n      authApiUtils.handleSupabaseError.mockReturnValue(mockErrorResponse)\n\n      const response = await POST(request)\n\n      expect(supabase.auth.resetPasswordForEmail",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 103,
        "end": 111,
        "startLoc": {
          "line": 103,
          "column": 22,
          "position": 778
        },
        "endLoc": {
          "line": 111,
          "column": 22,
          "position": 827
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 104,
        "end": 112,
        "startLoc": {
          "line": 104,
          "column": 11,
          "position": 647
        },
        "endLoc": {
          "line": 112,
          "column": 11,
          "position": 696
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ")\n\n      expect(supabase.auth.resetPasswordForEmail).toHaveBeenCalledWith(\n        validForgotPasswordData.email,\n        {\n          redirectTo: validForgotPasswordData.redirectTo\n        }\n      )\n      expect(authApiUtils.handleSupabaseError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 109,
        "end": 117,
        "startLoc": {
          "line": 109,
          "column": 8,
          "position": 817
        },
        "endLoc": {
          "line": 117,
          "column": 20,
          "position": 861
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 64,
        "end": 71,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 469
        },
        "endLoc": {
          "line": 71,
          "column": 22,
          "position": 512
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "}\n      )\n      expect(authApiUtils.handleSupabaseError).toHaveBeenCalledWith(supabaseError)\n      expect(response).toBe(mockErrorResponse)\n    })\n\n    it('should validate email format in request'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 115,
        "end": 121,
        "startLoc": {
          "line": 115,
          "column": 9,
          "position": 851
        },
        "endLoc": {
          "line": 121,
          "column": 42,
          "position": 888
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 114,
        "end": 119,
        "startLoc": {
          "line": 114,
          "column": 7,
          "position": 712
        },
        "endLoc": {
          "line": 119,
          "column": 42,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ")\n      const mockParseError = { error: 'Invalid email format' }\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: null,\n        error: mockParseError\n      })\n\n      const response = await POST(request)\n\n      expect(authApiUtils.parseRequestBody).toHaveBeenCalledWith(request, expect.any(Object))\n      expect(response).toBe(mockParseError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 126,
        "end": 137,
        "startLoc": {
          "line": 126,
          "column": 12,
          "position": 935
        },
        "endLoc": {
          "line": 137,
          "column": 15,
          "position": 1025
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 95,
        "end": 43,
        "startLoc": {
          "line": 95,
          "column": 2,
          "position": 761
        },
        "endLoc": {
          "line": 43,
          "column": 13,
          "position": 363
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n      expect(response).toBe(mockParseError)\n    })\n\n    it('should validate redirectTo URL in request'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 136,
        "end": 140,
        "startLoc": {
          "line": 136,
          "column": 2,
          "position": 1015
        },
        "endLoc": {
          "line": 140,
          "column": 44,
          "position": 1036
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 134,
        "end": 110,
        "startLoc": {
          "line": 134,
          "column": 2,
          "position": 885
        },
        "endLoc": {
          "line": 110,
          "column": 47,
          "position": 876
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const invalidData = {\n        email: TEST_CONSTANTS",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 140,
        "end": 142,
        "startLoc": {
          "line": 140,
          "column": 44,
          "position": 1037
        },
        "endLoc": {
          "line": 142,
          "column": 15,
          "position": 1061
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 121,
        "end": 123,
        "startLoc": {
          "line": 121,
          "column": 42,
          "position": 889
        },
        "endLoc": {
          "line": 123,
          "column": 16,
          "position": 913
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "= {\n        email: TEST_CONSTANTS.EMAIL,\n        redirectTo: 'invalid-url'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 141,
        "end": 143,
        "startLoc": {
          "line": 141,
          "column": 2,
          "position": 1053
        },
        "endLoc": {
          "line": 143,
          "column": 14,
          "position": 1070
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 39,
        "end": 41,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 293
        },
        "endLoc": {
          "line": 41,
          "column": 37,
          "position": 310
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "}\n      const request = mockRequest(invalidData)\n      const mockParseError = { error: 'Invalid URL format'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 144,
        "end": 146,
        "startLoc": {
          "line": 144,
          "column": 7,
          "position": 1073
        },
        "endLoc": {
          "line": 146,
          "column": 21,
          "position": 1099
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 125,
        "end": 127,
        "startLoc": {
          "line": 125,
          "column": 7,
          "position": 923
        },
        "endLoc": {
          "line": 127,
          "column": 23,
          "position": 949
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: null,\n        error: mockParseError\n      })\n\n      const response = await POST(request)\n\n      expect(authApiUtils.parseRequestBody).toHaveBeenCalledWith(request, expect.any(Object))\n      expect(response).toBe(mockParseError)\n    })\n  })\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\auth\\forgot-password\\route.test.ts",
        "start": 146,
        "end": 159,
        "startLoc": {
          "line": 146,
          "column": 2,
          "position": 1101
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1186
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 139,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 139,
          "column": 9,
          "position": 908
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": any = {}) => ({\n    ok: false",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 116,
        "end": 117,
        "startLoc": {
          "line": 116,
          "column": 6,
          "position": 847
        },
        "endLoc": {
          "line": 117,
          "column": 6,
          "position": 866
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 107,
        "end": 108,
        "startLoc": {
          "line": 107,
          "column": 5,
          "position": 766
        },
        "endLoc": {
          "line": 108,
          "column": 5,
          "position": 785
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ",\n    json: vi.fn().mockResolvedValue({\n      error",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 117,
        "end": 119,
        "startLoc": {
          "line": 117,
          "column": 6,
          "position": 867
        },
        "endLoc": {
          "line": 119,
          "column": 6,
          "position": 884
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 108,
        "end": 110,
        "startLoc": {
          "line": 108,
          "column": 5,
          "position": 786
        },
        "endLoc": {
          "line": 110,
          "column": 5,
          "position": 803
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": any = {}) => {\n    mockFetch.mockResolvedValueOnce(createResponse.error",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 131,
        "end": 132,
        "startLoc": {
          "line": 131,
          "column": 6,
          "position": 975
        },
        "endLoc": {
          "line": 132,
          "column": 6,
          "position": 996
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 127,
        "end": 128,
        "startLoc": {
          "line": 127,
          "column": 5,
          "position": 931
        },
        "endLoc": {
          "line": 128,
          "column": 8,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n    expect(result.current.message).toBe('')\n    expect",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 146,
        "end": 148,
        "startLoc": {
          "line": 146,
          "column": 13,
          "position": 1149
        },
        "endLoc": {
          "line": 148,
          "column": 7,
          "position": 1167
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 141,
        "end": 143,
        "startLoc": {
          "line": 141,
          "column": 3,
          "position": 1093
        },
        "endLoc": {
          "line": 143,
          "column": 2,
          "position": 1111
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ").toBe('')\n    expect(result.current.loading",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 147,
        "end": 148,
        "startLoc": {
          "line": 147,
          "column": 8,
          "position": 1159
        },
        "endLoc": {
          "line": 148,
          "column": 8,
          "position": 1173
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 141,
        "end": 142,
        "startLoc": {
          "line": 141,
          "column": 6,
          "position": 1088
        },
        "endLoc": {
          "line": 142,
          "column": 8,
          "position": 1102
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "expect(result.current.loading).toBe(false)\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 148,
        "end": 149,
        "startLoc": {
          "line": 148,
          "column": 5,
          "position": 1167
        },
        "endLoc": {
          "line": 149,
          "column": 2,
          "position": 1182
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 140,
        "end": 141,
        "startLoc": {
          "line": 140,
          "column": 5,
          "position": 1066
        },
        "endLoc": {
          "line": 141,
          "column": 7,
          "position": 1081
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": string) => {\n    expect(result.current.message",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 151,
        "end": 152,
        "startLoc": {
          "line": 151,
          "column": 8,
          "position": 1198
        },
        "endLoc": {
          "line": 152,
          "column": 8,
          "position": 1214
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 145,
        "end": 146,
        "startLoc": {
          "line": 145,
          "column": 13,
          "position": 1127
        },
        "endLoc": {
          "line": 146,
          "column": 6,
          "position": 1143
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n    expect(result.current.error).toBe('')\n    expect(result.current.loading).toBe(false)\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 152,
        "end": 156,
        "startLoc": {
          "line": 152,
          "column": 8,
          "position": 1220
        },
        "endLoc": {
          "line": 156,
          "column": 2,
          "position": 1255
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 140,
        "end": 149,
        "startLoc": {
          "line": 140,
          "column": 6,
          "position": 1078
        },
        "endLoc": {
          "line": 149,
          "column": 2,
          "position": 1183
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": (overrides = {}) => ({\n    id",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 167,
        "end": 168,
        "startLoc": {
          "line": 167,
          "column": 10,
          "position": 1325
        },
        "endLoc": {
          "line": 168,
          "column": 3,
          "position": 1342
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 160,
        "end": 161,
        "startLoc": {
          "line": 160,
          "column": 11,
          "position": 1272
        },
        "endLoc": {
          "line": 161,
          "column": 8,
          "position": 1289
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ": (overrides = {}) => ({\n    loading: false,\n    loadingText: TEST_CONSTANTS.LOADING_TEXT,\n    buttonText",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 177,
        "end": 180,
        "startLoc": {
          "line": 177,
          "column": 15,
          "position": 1399
        },
        "endLoc": {
          "line": 180,
          "column": 11,
          "position": 1432
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 160,
        "end": 163,
        "startLoc": {
          "line": 160,
          "column": 11,
          "position": 1272
        },
        "endLoc": {
          "line": 163,
          "column": 9,
          "position": 1305
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": (overrides = {}) => ({\n    email",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 186,
        "end": 187,
        "startLoc": {
          "line": 186,
          "column": 24,
          "position": 1470
        },
        "endLoc": {
          "line": 187,
          "column": 6,
          "position": 1487
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 160,
        "end": 161,
        "startLoc": {
          "line": 160,
          "column": 11,
          "position": 1272
        },
        "endLoc": {
          "line": 161,
          "column": 8,
          "position": 1289
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ": vi.fn(),\n    ...overrides\n  })\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 190,
        "end": 193,
        "startLoc": {
          "line": 190,
          "column": 12,
          "position": 1513
        },
        "endLoc": {
          "line": 193,
          "column": 2,
          "position": 1530
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 173,
        "end": 175,
        "startLoc": {
          "line": 173,
          "column": 9,
          "position": 1378
        },
        "endLoc": {
          "line": 175,
          "column": 2,
          "position": 1394
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": any) => {\n    expect(mockFetch).toHaveBeenCalledWith(endpoint",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 207,
        "end": 208,
        "startLoc": {
          "line": 207,
          "column": 5,
          "position": 1645
        },
        "endLoc": {
          "line": 208,
          "column": 9,
          "position": 1662
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 203,
        "end": 204,
        "startLoc": {
          "line": 203,
          "column": 10,
          "position": 1602
        },
        "endLoc": {
          "line": 204,
          "column": 20,
          "position": 1619
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": string) => {\n    expect(screen.getByText(loadingText",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 241,
        "end": 242,
        "startLoc": {
          "line": 241,
          "column": 13,
          "position": 1930
        },
        "endLoc": {
          "line": 242,
          "column": 12,
          "position": 1946
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 236,
        "end": 237,
        "startLoc": {
          "line": 236,
          "column": 5,
          "position": 1872
        },
        "endLoc": {
          "line": 237,
          "column": 5,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")).toBeInTheDocument()\n    expect(screen.queryByText",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 242,
        "end": 243,
        "startLoc": {
          "line": 242,
          "column": 12,
          "position": 1947
        },
        "endLoc": {
          "line": 243,
          "column": 12,
          "position": 1959
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 237,
        "end": 238,
        "startLoc": {
          "line": 237,
          "column": 5,
          "position": 1889
        },
        "endLoc": {
          "line": 238,
          "column": 10,
          "position": 1901
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ".toBeInTheDocument()\n    expect(screen.getByRole('button')).toBeDisabled",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 243,
        "end": 244,
        "startLoc": {
          "line": 243,
          "column": 4,
          "position": 1966
        },
        "endLoc": {
          "line": 244,
          "column": 13,
          "position": 1982
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 237,
        "end": 238,
        "startLoc": {
          "line": 237,
          "column": 2,
          "position": 1891
        },
        "endLoc": {
          "line": 238,
          "column": 4,
          "position": 1907
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": (text: string) => {\n    expect(screen.getByRole",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 247,
        "end": 248,
        "startLoc": {
          "line": 247,
          "column": 21,
          "position": 1993
        },
        "endLoc": {
          "line": 248,
          "column": 10,
          "position": 2011
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 236,
        "end": 237,
        "startLoc": {
          "line": 236,
          "column": 21,
          "position": 1868
        },
        "endLoc": {
          "line": 237,
          "column": 10,
          "position": 1886
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "expect(screen.getByRole('button')).toBeDisabled()\n    expect",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 248,
        "end": 249,
        "startLoc": {
          "line": 248,
          "column": 5,
          "position": 2007
        },
        "endLoc": {
          "line": 249,
          "column": 7,
          "position": 2022
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 238,
        "end": 245,
        "startLoc": {
          "line": 238,
          "column": 5,
          "position": 1897
        },
        "endLoc": {
          "line": 245,
          "column": 2,
          "position": 1987
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "expect(screen.getByText(text)).toBeInTheDocument()\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 249,
        "end": 250,
        "startLoc": {
          "line": 249,
          "column": 5,
          "position": 2022
        },
        "endLoc": {
          "line": 250,
          "column": 2,
          "position": 2037
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 237,
        "end": 238,
        "startLoc": {
          "line": 237,
          "column": 5,
          "position": 1882
        },
        "endLoc": {
          "line": 238,
          "column": 7,
          "position": 1897
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")).toBeInTheDocument()\n    expect(screen.getByRole(inputType",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 253,
        "end": 254,
        "startLoc": {
          "line": 253,
          "column": 12,
          "position": 2071
        },
        "endLoc": {
          "line": 254,
          "column": 10,
          "position": 2085
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 237,
        "end": 238,
        "startLoc": {
          "line": 237,
          "column": 5,
          "position": 1889
        },
        "endLoc": {
          "line": 238,
          "column": 9,
          "position": 1903
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": string) => {\n    expect(screen.getByText(errorText",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 263,
        "end": 264,
        "startLoc": {
          "line": 263,
          "column": 10,
          "position": 2162
        },
        "endLoc": {
          "line": 264,
          "column": 10,
          "position": 2178
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 236,
        "end": 237,
        "startLoc": {
          "line": 236,
          "column": 5,
          "position": 1872
        },
        "endLoc": {
          "line": 237,
          "column": 5,
          "position": 1888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")).toBeInTheDocument()\n    expect(screen.getByText",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 264,
        "end": 265,
        "startLoc": {
          "line": 264,
          "column": 10,
          "position": 2179
        },
        "endLoc": {
          "line": 265,
          "column": 10,
          "position": 2191
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 237,
        "end": 238,
        "startLoc": {
          "line": 237,
          "column": 5,
          "position": 1889
        },
        "endLoc": {
          "line": 238,
          "column": 10,
          "position": 1901
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ": string) => {\n    const input = screen.getByPlaceholderText(placeholder)\n    expect(input).toBeInTheDocument()\n    expect(input).toHaveAttribute(attribute",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 274,
        "end": 277,
        "startLoc": {
          "line": 274,
          "column": 6,
          "position": 2289
        },
        "endLoc": {
          "line": 277,
          "column": 10,
          "position": 2330
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 257,
        "end": 260,
        "startLoc": {
          "line": 257,
          "column": 12,
          "position": 2104
        },
        "endLoc": {
          "line": 260,
          "column": 7,
          "position": 2145
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ": string) => {\n    const input = screen.getByPlaceholderText(placeholder)\n    expect(input).toBeInTheDocument()\n    expect(input).not",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 280,
        "end": 283,
        "startLoc": {
          "line": 280,
          "column": 10,
          "position": 2353
        },
        "endLoc": {
          "line": 283,
          "column": 4,
          "position": 2392
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 257,
        "end": 260,
        "startLoc": {
          "line": 257,
          "column": 12,
          "position": 2104
        },
        "endLoc": {
          "line": 260,
          "column": 16,
          "position": 2143
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ": (placeholder: string) => {\n    const input = screen.getByPlaceholderText(placeholder)\n    expect(input).toBeRequired",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 286,
        "end": 288,
        "startLoc": {
          "line": 286,
          "column": 20,
          "position": 2406
        },
        "endLoc": {
          "line": 288,
          "column": 13,
          "position": 2439
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 257,
        "end": 259,
        "startLoc": {
          "line": 257,
          "column": 28,
          "position": 2100
        },
        "endLoc": {
          "line": 259,
          "column": 18,
          "position": 2133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ": (placeholder: string) => {\n    const input = screen.getByPlaceholderText(placeholder)\n    expect(input).not",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 291,
        "end": 293,
        "startLoc": {
          "line": 291,
          "column": 23,
          "position": 2450
        },
        "endLoc": {
          "line": 293,
          "column": 4,
          "position": 2483
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 257,
        "end": 259,
        "startLoc": {
          "line": 257,
          "column": 28,
          "position": 2100
        },
        "endLoc": {
          "line": 259,
          "column": 18,
          "position": 2133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ": (placeholder: string) => {\n    const input = screen.getByPlaceholderText(placeholder)\n    expect(input).toHaveClass",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 296,
        "end": 298,
        "startLoc": {
          "line": 296,
          "column": 30,
          "position": 2496
        },
        "endLoc": {
          "line": 298,
          "column": 12,
          "position": 2529
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 257,
        "end": 259,
        "startLoc": {
          "line": 257,
          "column": 28,
          "position": 2100
        },
        "endLoc": {
          "line": 259,
          "column": 18,
          "position": 2133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ": string) => {\n    const input = screen.getByPlaceholderText(placeholder)\n    expect(input).toHaveClass(className",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 317,
        "end": 319,
        "startLoc": {
          "line": 317,
          "column": 10,
          "position": 2611
        },
        "endLoc": {
          "line": 319,
          "column": 10,
          "position": 2642
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 257,
        "end": 299,
        "startLoc": {
          "line": 257,
          "column": 12,
          "position": 2104
        },
        "endLoc": {
          "line": 299,
          "column": 18,
          "position": 2533
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n    expect(link).toBeInTheDocument()\n    expect(link).toHaveAttribute('href', href)\n    expect",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 324,
        "end": 327,
        "startLoc": {
          "line": 324,
          "column": 2,
          "position": 2715
        },
        "endLoc": {
          "line": 327,
          "column": 7,
          "position": 2742
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 269,
        "end": 272,
        "startLoc": {
          "line": 269,
          "column": 5,
          "position": 2240
        },
        "endLoc": {
          "line": 272,
          "column": 2,
          "position": 2267
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")).toBeInTheDocument()\n    expect(screen.getByPlaceholderText",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 341,
        "end": 342,
        "startLoc": {
          "line": 341,
          "column": 16,
          "position": 2878
        },
        "endLoc": {
          "line": 342,
          "column": 21,
          "position": 2890
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 237,
        "end": 238,
        "startLoc": {
          "line": 237,
          "column": 5,
          "position": 1889
        },
        "endLoc": {
          "line": 238,
          "column": 10,
          "position": 1901
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")).toBeInTheDocument()\n    expect(screen.getByDisplayValue",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 346,
        "end": 347,
        "startLoc": {
          "line": 346,
          "column": 6,
          "position": 2934
        },
        "endLoc": {
          "line": 347,
          "column": 18,
          "position": 2946
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 237,
        "end": 238,
        "startLoc": {
          "line": 237,
          "column": 5,
          "position": 1889
        },
        "endLoc": {
          "line": 238,
          "column": 10,
          "position": 1901
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ": string) => {\n    const input = screen.getByPlaceholderText(placeholder)\n    fireEvent",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 350,
        "end": 352,
        "startLoc": {
          "line": 350,
          "column": 10,
          "position": 2979
        },
        "endLoc": {
          "line": 352,
          "column": 10,
          "position": 3003
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 257,
        "end": 259,
        "startLoc": {
          "line": 257,
          "column": 12,
          "position": 2104
        },
        "endLoc": {
          "line": 259,
          "column": 7,
          "position": 2128
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")).not.toBeInTheDocument()\n    expect(container",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 358,
        "end": 359,
        "startLoc": {
          "line": 358,
          "column": 23,
          "position": 3079
        },
        "endLoc": {
          "line": 359,
          "column": 10,
          "position": 3091
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 243,
        "end": 244,
        "startLoc": {
          "line": 243,
          "column": 13,
          "position": 1962
        },
        "endLoc": {
          "line": 244,
          "column": 7,
          "position": 1974
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": (container: HTMLElement) => {\n    expect(container.querySelector(TEST_CONSTANTS.STACKED_INPUT_SELECTOR)).toBeInTheDocument",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 362,
        "end": 363,
        "startLoc": {
          "line": 362,
          "column": 28,
          "position": 3111
        },
        "endLoc": {
          "line": 363,
          "column": 18,
          "position": 3137
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 357,
        "end": 358,
        "startLoc": {
          "line": 357,
          "column": 31,
          "position": 3056
        },
        "endLoc": {
          "line": 358,
          "column": 4,
          "position": 3082
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ".querySelectorAll('div')).toHaveLength(2)\n  },\n\n  expectAuthLayoutWithTitle",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 365,
        "end": 368,
        "startLoc": {
          "line": 365,
          "column": 2,
          "position": 3162
        },
        "endLoc": {
          "line": 368,
          "column": 26,
          "position": 3180
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 359,
        "end": 362,
        "startLoc": {
          "line": 359,
          "column": 10,
          "position": 3092
        },
        "endLoc": {
          "line": 362,
          "column": 28,
          "position": 3110
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", ...classes: string[]) => {\n    const spinner",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 377,
        "end": 378,
        "startLoc": {
          "line": 377,
          "column": 12,
          "position": 3280
        },
        "endLoc": {
          "line": 378,
          "column": 8,
          "position": 3298
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 323,
        "end": 324,
        "startLoc": {
          "line": 323,
          "column": 7,
          "position": 2678
        },
        "endLoc": {
          "line": 324,
          "column": 5,
          "position": 2696
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n\n    const { result } = renderHook(() =>\n      useAuthForm",
      "tokens": 0,
      "firstFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 387,
        "end": 390,
        "startLoc": {
          "line": 387,
          "column": 10,
          "position": 3416
        },
        "endLoc": {
          "line": 390,
          "column": 12,
          "position": 3438
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 218,
        "end": 220,
        "startLoc": {
          "line": 218,
          "column": 14,
          "position": 1757
        },
        "endLoc": {
          "line": 220,
          "column": 16,
          "position": 1778
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "import { NextRequest } from 'next/server'\nimport { z } from 'zod'\nimport supabase from '../../lib/supabase'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.ts",
        "start": 1,
        "end": 3,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 3,
          "column": 21,
          "position": 30
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 1,
        "end": 3,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 3,
          "column": 30,
          "position": 32
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "= z.object({\n  email: z.email(),\n  password: z.string().min(MIN_PASSWORD_LENGTH),\n  firstName",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.ts",
        "start": 15,
        "end": 18,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 131
        },
        "endLoc": {
          "line": 18,
          "column": 10,
          "position": 167
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 6,
        "end": 11,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 64
        },
        "endLoc": {
          "line": 11,
          "column": 2,
          "position": 109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ": z.string().min(MIN_NAME_LENGTH),\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.ts",
        "start": 19,
        "end": 20,
        "startLoc": {
          "line": 19,
          "column": 9,
          "position": 184
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 198
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.ts",
        "start": 18,
        "end": 19,
        "startLoc": {
          "line": 18,
          "column": 10,
          "position": 168
        },
        "endLoc": {
          "line": 19,
          "column": 9,
          "position": 183
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "{\n    const { data: validatedData, error: parseError } = await parseRequestBody(request, RegisterSchema",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.ts",
        "start": 23,
        "end": 24,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 227
        },
        "endLoc": {
          "line": 24,
          "column": 15,
          "position": 256
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 13,
        "end": 14,
        "startLoc": {
          "line": 13,
          "column": 2,
          "position": 129
        },
        "endLoc": {
          "line": 14,
          "column": 20,
          "position": 159
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "({\n      email: validatedData.email,\n      password: validatedData.password,\n      options",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.ts",
        "start": 30,
        "end": 33,
        "startLoc": {
          "line": 30,
          "column": 7,
          "position": 301
        },
        "endLoc": {
          "line": 33,
          "column": 8,
          "position": 323
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 19,
        "end": 22,
        "startLoc": {
          "line": 19,
          "column": 19,
          "position": 215
        },
        "endLoc": {
          "line": 22,
          "column": 2,
          "position": 240
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "return createSuccessResponse({\n      user: data.user,\n      session: data.session,\n      message",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.ts",
        "start": 53,
        "end": 56,
        "startLoc": {
          "line": 53,
          "column": 5,
          "position": 457
        },
        "endLoc": {
          "line": 56,
          "column": 8,
          "position": 482
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 36,
        "end": 39,
        "startLoc": {
          "line": 36,
          "column": 3,
          "position": 344
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 372
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ",\n    })\n\n  } catch (err) {\n    console.error('Registration error:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.ts",
        "start": 56,
        "end": 60,
        "startLoc": {
          "line": 56,
          "column": 27,
          "position": 486
        },
        "endLoc": {
          "line": 60,
          "column": 22,
          "position": 509
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.ts",
        "start": 22,
        "end": 25,
        "startLoc": {
          "line": 22,
          "column": 26,
          "position": 192
        },
        "endLoc": {
          "line": 25,
          "column": 16,
          "position": 217
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "import { describe, it, expect, vi, beforeEach } from 'vitest'\nimport { handleRegistration",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 19,
          "position": 28
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 4,
          "position": 28
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "// Mock NextRequest\nconst mockRequest = (body: any): any => ({\n  json: vi.fn().mockResolvedValue(body)\n})\n\n// Mock auth-api-utils\nvi.mock('./auth-api-utils'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 5,
        "end": 11,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 49
        },
        "endLoc": {
          "line": 11,
          "column": 19,
          "position": 97
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 6,
        "end": 12,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 54
        },
        "endLoc": {
          "line": 12,
          "column": 23,
          "position": 102
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ", () => ({\n  parseRequestBody: vi.fn(),\n  handleSupabaseError: vi.fn(),\n  createSuccessResponse: vi.fn(),\n  createErrorResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 11,
        "end": 15,
        "startLoc": {
          "line": 11,
          "column": 19,
          "position": 98
        },
        "endLoc": {
          "line": 15,
          "column": 20,
          "position": 142
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 12,
        "end": 16,
        "startLoc": {
          "line": 12,
          "column": 23,
          "position": 103
        },
        "endLoc": {
          "line": 16,
          "column": 16,
          "position": 147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ", () => ({\n  default: {\n    auth: {\n      signUp",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 24,
        "end": 27,
        "startLoc": {
          "line": 24,
          "column": 21,
          "position": 195
        },
        "endLoc": {
          "line": 27,
          "column": 7,
          "position": 218
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 21,
        "end": 24,
        "startLoc": {
          "line": 21,
          "column": 30,
          "position": 177
        },
        "endLoc": {
          "line": 24,
          "column": 11,
          "position": 200
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": vi.fn()\n    }\n  }\n}))\n\ndescribe('registration-handler'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 27,
        "end": 32,
        "startLoc": {
          "line": 27,
          "column": 7,
          "position": 219
        },
        "endLoc": {
          "line": 32,
          "column": 23,
          "position": 240
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 24,
        "end": 29,
        "startLoc": {
          "line": 24,
          "column": 11,
          "position": 201
        },
        "endLoc": {
          "line": 29,
          "column": 27,
          "position": 222
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ", () => {\n  let authApiUtils: any\n  let supabase: any\n  let",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 32,
        "end": 35,
        "startLoc": {
          "line": 32,
          "column": 23,
          "position": 241
        },
        "endLoc": {
          "line": 35,
          "column": 4,
          "position": 267
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 29,
        "end": 33,
        "startLoc": {
          "line": 29,
          "column": 27,
          "position": 223
        },
        "endLoc": {
          "line": 33,
          "column": 11,
          "position": 250
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": any\n\n\n  beforeEach(async () => {\n    vi.clearAllMocks()\n    console.log = vi.fn()\n    console.error = vi.fn()\n\n    authApiUtils",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 36,
        "end": 44,
        "startLoc": {
          "line": 36,
          "column": 17,
          "position": 278
        },
        "endLoc": {
          "line": 44,
          "column": 13,
          "position": 331
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 12,
        "end": 31,
        "startLoc": {
          "line": 12,
          "column": 13,
          "position": 108
        },
        "endLoc": {
          "line": 31,
          "column": 13,
          "position": 227
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "= vi.fn()\n\n    authApiUtils = await import('./auth-api-utils'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 42,
        "end": 44,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 321
        },
        "endLoc": {
          "line": 44,
          "column": 19,
          "position": 339
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 34,
        "end": 36,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 260
        },
        "endLoc": {
          "line": 36,
          "column": 23,
          "position": 278
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ")\n  })\n\n  const validRegisterData = {\n    email: TEST_CONSTANTS.EMAIL,\n    password: TEST_CONSTANTS.PASSWORD,\n    firstName: 'John',\n    lastName: 'Doe'\n  }\n\n  describe('handleRegistration'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 57,
        "end": 67,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 444
        },
        "endLoc": {
          "line": 67,
          "column": 21,
          "position": 498
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 23,
        "end": 33,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 199
        },
        "endLoc": {
          "line": 33,
          "column": 7,
          "position": 253
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const request = mockRequest(validRegisterData)\n      const mockUser",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 68,
        "end": 70,
        "startLoc": {
          "line": 68,
          "column": 77,
          "position": 512
        },
        "endLoc": {
          "line": 70,
          "column": 9,
          "position": 538
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 36,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 36,
          "column": 13,
          "position": 293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ", email: TEST_CONSTANTS.EMAIL }\n      const mockSession = { access_token: 'token123' }\n      const mockSuccessResponse = {\n        user: mockUser,\n        session: mockSession,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 70,
        "end": 74,
        "startLoc": {
          "line": 70,
          "column": 6,
          "position": 548
        },
        "endLoc": {
          "line": 74,
          "column": 2,
          "position": 596
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 56,
        "end": 58,
        "startLoc": {
          "line": 56,
          "column": 8,
          "position": 430
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 477
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: validRegisterData",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 76,
        "end": 79,
        "startLoc": {
          "line": 76,
          "column": 7,
          "position": 605
        },
        "endLoc": {
          "line": 79,
          "column": 18,
          "position": 621
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 53,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 53,
          "column": 23,
          "position": 396
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ",\n        error: null\n      })\n\n      supabase.auth.signUp",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 79,
        "end": 83,
        "startLoc": {
          "line": 79,
          "column": 18,
          "position": 622
        },
        "endLoc": {
          "line": 83,
          "column": 7,
          "position": 640
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 53,
        "end": 57,
        "startLoc": {
          "line": 53,
          "column": 23,
          "position": 397
        },
        "endLoc": {
          "line": 57,
          "column": 11,
          "position": 415
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".mockResolvedValue({\n        data: { user: mockUser, session: mockSession },\n        error: null\n      })\n\n      profileUtils",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 83,
        "end": 88,
        "startLoc": {
          "line": 83,
          "column": 7,
          "position": 641
        },
        "endLoc": {
          "line": 88,
          "column": 13,
          "position": 678
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 65,
        "end": 70,
        "startLoc": {
          "line": 65,
          "column": 23,
          "position": 509
        },
        "endLoc": {
          "line": 70,
          "column": 13,
          "position": 546
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n      authApiUtils.createSuccessResponse.mockReturnValue(mockSuccessResponse)\n\n      const response = await handleRegistration",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 88,
        "end": 91,
        "startLoc": {
          "line": 88,
          "column": 10,
          "position": 685
        },
        "endLoc": {
          "line": 91,
          "column": 19,
          "position": 707
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 59,
        "end": 63,
        "startLoc": {
          "line": 59,
          "column": 2,
          "position": 429
        },
        "endLoc": {
          "line": 63,
          "column": 5,
          "position": 452
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n\n      expect(response).toBe(mockSuccessResponse)\n      expect",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 91,
        "end": 94,
        "startLoc": {
          "line": 91,
          "column": 17,
          "position": 713
        },
        "endLoc": {
          "line": 94,
          "column": 7,
          "position": 728
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 49,
        "end": 51,
        "startLoc": {
          "line": 49,
          "column": 12,
          "position": 421
        },
        "endLoc": {
          "line": 51,
          "column": 2,
          "position": 435
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ", async () => {\n      const request = mockRequest({})\n      const mockParseError = { error: 'Invalid email format' }\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: null,\n        error: mockParseError\n      })\n\n      const response = await handleRegistration",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 97,
        "end": 106,
        "startLoc": {
          "line": 97,
          "column": 67,
          "position": 748
        },
        "endLoc": {
          "line": 106,
          "column": 19,
          "position": 825
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 131,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 131,
          "column": 5,
          "position": 844
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n\n      const response = await handleRegistration(request, mockPrismaClient)\n\n      expect(response).toBe(mockParseError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 104,
        "end": 108,
        "startLoc": {
          "line": 104,
          "column": 2,
          "position": 813
        },
        "endLoc": {
          "line": 108,
          "column": 15,
          "position": 842
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 89,
        "end": 93,
        "startLoc": {
          "line": 89,
          "column": 20,
          "position": 695
        },
        "endLoc": {
          "line": 93,
          "column": 20,
          "position": 724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n\n      expect(response).toBe(mockParseError)\n      expect",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 106,
        "end": 109,
        "startLoc": {
          "line": 106,
          "column": 17,
          "position": 831
        },
        "endLoc": {
          "line": 109,
          "column": 7,
          "position": 846
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 134,
        "end": 136,
        "startLoc": {
          "line": 134,
          "column": 2,
          "position": 885
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 899
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n      expect(mockPrismaClient.$disconnect).toHaveBeenCalled()\n    })\n\n    it('should call prisma.$disconnect in finally block on Supabase error'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 108,
        "end": 112,
        "startLoc": {
          "line": 108,
          "column": 15,
          "position": 843
        },
        "endLoc": {
          "line": 112,
          "column": 68,
          "position": 865
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 93,
        "end": 97,
        "startLoc": {
          "line": 93,
          "column": 20,
          "position": 725
        },
        "endLoc": {
          "line": 97,
          "column": 67,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const request = mockRequest(validRegisterData)\n      const supabaseError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 112,
        "end": 114,
        "startLoc": {
          "line": 112,
          "column": 68,
          "position": 866
        },
        "endLoc": {
          "line": 114,
          "column": 14,
          "position": 892
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 36,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 36,
          "column": 13,
          "position": 293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: validRegisterData,\n        error: null\n      })\n\n      supabase.auth.signUp.mockResolvedValue({\n        data: { user: null, session: null },\n        error: supabaseError\n      })\n\n      authApiUtils.handleSupabaseError.mockReturnValue(mockErrorResponse)\n\n      const response = await handleRegistration",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 115,
        "end": 129,
        "startLoc": {
          "line": 115,
          "column": 2,
          "position": 919
        },
        "endLoc": {
          "line": 129,
          "column": 19,
          "position": 1011
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 110,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 110,
          "column": 5,
          "position": 683
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n\n      const response = await handleRegistration(request, mockPrismaClient)\n\n      expect(response).toBe(mockErrorResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 127,
        "end": 131,
        "startLoc": {
          "line": 127,
          "column": 18,
          "position": 999
        },
        "endLoc": {
          "line": 131,
          "column": 18,
          "position": 1028
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 89,
        "end": 93,
        "startLoc": {
          "line": 89,
          "column": 20,
          "position": 695
        },
        "endLoc": {
          "line": 93,
          "column": 20,
          "position": 724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n\n      expect(response).toBe(mockErrorResponse)\n      expect",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 129,
        "end": 132,
        "startLoc": {
          "line": 129,
          "column": 17,
          "position": 1017
        },
        "endLoc": {
          "line": 132,
          "column": 7,
          "position": 1032
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 115,
        "end": 117,
        "startLoc": {
          "line": 115,
          "column": 14,
          "position": 726
        },
        "endLoc": {
          "line": 117,
          "column": 2,
          "position": 740
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")\n      expect(console.error).toHaveBeenCalledWith('Supabase signup error:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 131,
        "end": 132,
        "startLoc": {
          "line": 131,
          "column": 18,
          "position": 1029
        },
        "endLoc": {
          "line": 132,
          "column": 25,
          "position": 1041
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 97,
        "end": 98,
        "startLoc": {
          "line": 97,
          "column": 7,
          "position": 785
        },
        "endLoc": {
          "line": 98,
          "column": 16,
          "position": 797
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n      expect(mockPrismaClient.$disconnect).toHaveBeenCalled()\n    })\n\n    it('should call prisma.$disconnect in finally block when user is null'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 132,
        "end": 136,
        "startLoc": {
          "line": 132,
          "column": 14,
          "position": 1045
        },
        "endLoc": {
          "line": 136,
          "column": 68,
          "position": 1067
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 93,
        "end": 97,
        "startLoc": {
          "line": 93,
          "column": 20,
          "position": 725
        },
        "endLoc": {
          "line": 97,
          "column": 67,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const request = mockRequest(validRegisterData)\n      const mockErrorResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 136,
        "end": 138,
        "startLoc": {
          "line": 136,
          "column": 68,
          "position": 1068
        },
        "endLoc": {
          "line": 138,
          "column": 18,
          "position": 1094
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 36,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 36,
          "column": 13,
          "position": 293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "}\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: validRegisterData,\n        error: null\n      })\n\n      supabase.auth.signUp.mockResolvedValue({\n        data: { user: null, session: null },\n        error: null",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 138,
        "end": 147,
        "startLoc": {
          "line": 138,
          "column": 2,
          "position": 1113
        },
        "endLoc": {
          "line": 147,
          "column": 5,
          "position": 1178
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 50,
        "end": 126,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 380
        },
        "endLoc": {
          "line": 126,
          "column": 14,
          "position": 1022
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ", session: null },\n        error: null\n      })\n\n      authApiUtils.createErrorResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 146,
        "end": 150,
        "startLoc": {
          "line": 146,
          "column": 5,
          "position": 1164
        },
        "endLoc": {
          "line": 150,
          "column": 20,
          "position": 1188
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 164,
        "end": 168,
        "startLoc": {
          "line": 164,
          "column": 9,
          "position": 1322
        },
        "endLoc": {
          "line": 168,
          "column": 22,
          "position": 1346
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ".mockReturnValue(mockErrorResponse)\n\n      const response = await handleRegistration(request, mockPrismaClient)\n\n      expect(response).toBe(mockErrorResponse)\n      expect(authApiUtils",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 150,
        "end": 155,
        "startLoc": {
          "line": 150,
          "column": 20,
          "position": 1189
        },
        "endLoc": {
          "line": 155,
          "column": 13,
          "position": 1228
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 127,
        "end": 132,
        "startLoc": {
          "line": 127,
          "column": 20,
          "position": 995
        },
        "endLoc": {
          "line": 132,
          "column": 8,
          "position": 1034
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n      expect(mockPrismaClient.$disconnect).toHaveBeenCalled()\n    })\n\n    it('should call prisma.$disconnect in finally block on unexpected error'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 155,
        "end": 159,
        "startLoc": {
          "line": 155,
          "column": 9,
          "position": 1241
        },
        "endLoc": {
          "line": 159,
          "column": 70,
          "position": 1263
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 93,
        "end": 97,
        "startLoc": {
          "line": 93,
          "column": 20,
          "position": 725
        },
        "endLoc": {
          "line": 97,
          "column": 67,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const request = mockRequest(validRegisterData)\n      const testError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 159,
        "end": 161,
        "startLoc": {
          "line": 159,
          "column": 70,
          "position": 1264
        },
        "endLoc": {
          "line": 161,
          "column": 10,
          "position": 1290
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 36,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 36,
          "column": 13,
          "position": 293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "= new Error('Unexpected error')\n      const mockErrorResponse = { error: TEST_CONSTANTS",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 161,
        "end": 162,
        "startLoc": {
          "line": 161,
          "column": 2,
          "position": 1292
        },
        "endLoc": {
          "line": 162,
          "column": 15,
          "position": 1313
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 86,
        "end": 87,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 687
        },
        "endLoc": {
          "line": 87,
          "column": 15,
          "position": 708
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", status: TEST_CONSTANTS.HTTP_500 }\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: validRegisterData,\n        error: null\n      })\n\n      // Mock supabase throwing an unexpected error",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 162,
        "end": 169,
        "startLoc": {
          "line": 162,
          "column": 28,
          "position": 1316
        },
        "endLoc": {
          "line": 169,
          "column": 46,
          "position": 1356
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 138,
        "end": 83,
        "startLoc": {
          "line": 138,
          "column": 23,
          "position": 1104
        },
        "endLoc": {
          "line": 83,
          "column": 9,
          "position": 636
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ")\n\n      authApiUtils.createErrorResponse.mockReturnValue(mockErrorResponse)\n\n      const response = await handleRegistration(request, mockPrismaClient)\n\n      expect(response).toBe(mockErrorResponse)\n      expect(console.error).toHaveBeenCalledWith('Registration error:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 170,
        "end": 177,
        "startLoc": {
          "line": 170,
          "column": 10,
          "position": 1368
        },
        "endLoc": {
          "line": 177,
          "column": 22,
          "position": 1421
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 148,
        "end": 98,
        "startLoc": {
          "line": 148,
          "column": 2,
          "position": 1182
        },
        "endLoc": {
          "line": 98,
          "column": 16,
          "position": 797
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")\n      expect(authApiUtils.createErrorResponse).toHaveBeenCalledWith(TEST_CONSTANTS",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 177,
        "end": 178,
        "startLoc": {
          "line": 177,
          "column": 10,
          "position": 1425
        },
        "endLoc": {
          "line": 178,
          "column": 15,
          "position": 1437
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 154,
        "end": 155,
        "startLoc": {
          "line": 154,
          "column": 18,
          "position": 1223
        },
        "endLoc": {
          "line": 155,
          "column": 23,
          "position": 1235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ", TEST_CONSTANTS.HTTP_500)\n      expect(mockPrismaClient.$disconnect).toHaveBeenCalled()\n    })\n\n    it('should call prisma.$disconnect in finally block when ensureUserProfile throws error'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 178,
        "end": 182,
        "startLoc": {
          "line": 178,
          "column": 28,
          "position": 1440
        },
        "endLoc": {
          "line": 182,
          "column": 86,
          "position": 1467
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 155,
        "end": 97,
        "startLoc": {
          "line": 155,
          "column": 23,
          "position": 1236
        },
        "endLoc": {
          "line": 97,
          "column": 67,
          "position": 747
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ", async () => {\n      const request = mockRequest(validRegisterData)\n      const mockUser = { id: '123', email: TEST_CONSTANTS.EMAIL }\n      const mockSession = { access_token: 'token123' }\n      const profileError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 182,
        "end": 186,
        "startLoc": {
          "line": 182,
          "column": 86,
          "position": 1468
        },
        "endLoc": {
          "line": 186,
          "column": 13,
          "position": 1534
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 46,
        "end": 58,
        "startLoc": {
          "line": 46,
          "column": 43,
          "position": 341
        },
        "endLoc": {
          "line": 58,
          "column": 20,
          "position": 460
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ")\n      const mockErrorResponse = { error: TEST_CONSTANTS.REGISTRATION_FAILED_MESSAGE, status: TEST_CONSTANTS.HTTP_500 }\n\n      authApiUtils.parseRequestBody.mockResolvedValue({\n        data: validRegisterData,\n        error: null\n      })\n\n      supabase.auth.signUp.mockResolvedValue({\n        data: { user: mockUser, session: mockSession },\n        error: null\n      })\n\n      // Mock ensureUserProfile throwing an error",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 186,
        "end": 199,
        "startLoc": {
          "line": 186,
          "column": 26,
          "position": 1543
        },
        "endLoc": {
          "line": 199,
          "column": 44,
          "position": 1642
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 161,
        "end": 70,
        "startLoc": {
          "line": 161,
          "column": 19,
          "position": 1299
        },
        "endLoc": {
          "line": 70,
          "column": 13,
          "position": 546
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ")\n      authApiUtils.createErrorResponse.mockReturnValue(mockErrorResponse)\n\n      const response = await handleRegistration(request, mockPrismaClient)\n\n      expect(response).toBe(mockErrorResponse)\n      expect(console.error).toHaveBeenCalledWith('Registration error:', profileError",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 200,
        "end": 206,
        "startLoc": {
          "line": 200,
          "column": 13,
          "position": 1652
        },
        "endLoc": {
          "line": 206,
          "column": 13,
          "position": 1707
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 148,
        "end": 177,
        "startLoc": {
          "line": 148,
          "column": 2,
          "position": 1182
        },
        "endLoc": {
          "line": 177,
          "column": 10,
          "position": 1424
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n      expect(mockPrismaClient.$disconnect).toHaveBeenCalled()\n    })\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 206,
        "end": 209,
        "startLoc": {
          "line": 206,
          "column": 13,
          "position": 1708
        },
        "endLoc": {
          "line": 209,
          "column": 2,
          "position": 1727
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 93,
        "end": 97,
        "startLoc": {
          "line": 93,
          "column": 20,
          "position": 725
        },
        "endLoc": {
          "line": 97,
          "column": 3,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "import { describe, it, expect, vi, beforeEach } from 'vitest'\nimport { ensureUserProfile",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 18,
          "position": 28
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 4,
          "position": 28
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", () => {\n  beforeEach(() => {\n    vi.clearAllMocks()\n    console.log = vi.fn()\n    console.error = vi.fn()\n\n    // Mock setTimeout for the trigger wait",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 13,
        "end": 19,
        "startLoc": {
          "line": 13,
          "column": 16,
          "position": 99
        },
        "endLoc": {
          "line": 19,
          "column": 40,
          "position": 153
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 21,
        "end": 31,
        "startLoc": {
          "line": 21,
          "column": 21,
          "position": 175
        },
        "endLoc": {
          "line": 31,
          "column": 13,
          "position": 227
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "// Mock setTimeout for the trigger wait\n    vi.spyOn(global, 'setTimeout').mockImplementation((callback: any) => {\n      callback()\n      return {} as any\n    })\n  })\n\n  const testFirstName",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 19,
        "end": 26,
        "startLoc": {
          "line": 19,
          "column": 5,
          "position": 153
        },
        "endLoc": {
          "line": 26,
          "column": 14,
          "position": 206
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.test.ts",
        "start": 53,
        "end": 60,
        "startLoc": {
          "line": 53,
          "column": 5,
          "position": 401
        },
        "endLoc": {
          "line": 60,
          "column": 18,
          "position": 454
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "{\n        id: TEST_CONSTANTS.USER_ID,\n        email: TEST_CONSTANTS.EMAIL,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 33,
        "end": 35,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 274
        },
        "endLoc": {
          "line": 35,
          "column": 2,
          "position": 292
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 39,
        "end": 39,
        "startLoc": {
          "line": 39,
          "column": 2,
          "position": 327
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 344
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ": {\n          id: TEST_CONSTANTS.USER_ID,\n          email: TEST_CONSTANTS.EMAIL,\n          firstName: testFirstName,\n          lastName: testLastName,",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 46,
        "end": 50,
        "startLoc": {
          "line": 46,
          "column": 5,
          "position": 386
        },
        "endLoc": {
          "line": 50,
          "column": 2,
          "position": 420
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 39,
        "end": 38,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 325
        },
        "endLoc": {
          "line": 38,
          "column": 2,
          "position": 308
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "})\n      expect(console.log).toHaveBeenCalledWith('Trigger did not create profile, creating manually...'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 52,
        "end": 53,
        "startLoc": {
          "line": 52,
          "column": 7,
          "position": 426
        },
        "endLoc": {
          "line": 53,
          "column": 55,
          "position": 439
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 56,
        "end": 57,
        "startLoc": {
          "line": 56,
          "column": 7,
          "position": 432
        },
        "endLoc": {
          "line": 57,
          "column": 18,
          "position": 445
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")\n      expect(console.log).toHaveBeenCalledWith('Profile created manually for user:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 53,
        "end": 54,
        "startLoc": {
          "line": 53,
          "column": 55,
          "position": 440
        },
        "endLoc": {
          "line": 54,
          "column": 37,
          "position": 452
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 56,
        "end": 57,
        "startLoc": {
          "line": 56,
          "column": 2,
          "position": 433
        },
        "endLoc": {
          "line": 57,
          "column": 18,
          "position": 445
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "= {\n        id: TEST_CONSTANTS.USER_ID,\n        email: TEST_CONSTANTS.EMAIL,\n        firstName: testFirstName,\n        lastName: testLastName\n      }\n\n      // Mock that profile already exists",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 58,
        "end": 65,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 485
        },
        "endLoc": {
          "line": 65,
          "column": 36,
          "position": 525
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 56,
        "end": 38,
        "startLoc": {
          "line": 56,
          "column": 2,
          "position": 420
        },
        "endLoc": {
          "line": 38,
          "column": 2,
          "position": 309
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ")\n\n      await ensureUserProfile(TEST_CONSTANTS.USER_ID, TEST_CONSTANTS.EMAIL, testFirstName, testLastName, mockPrismaClient)\n\n      expect(mockPrismaClient.profile.findUnique).toHaveBeenCalledWith({\n        where: { id: TEST_CONSTANTS.USER_ID }\n      })\n      expect(mockPrismaClient.profile.create).not",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 66,
        "end": 73,
        "startLoc": {
          "line": 66,
          "column": 16,
          "position": 537
        },
        "endLoc": {
          "line": 73,
          "column": 4,
          "position": 608
        }
      },
      "secondFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 38,
        "end": 45,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 309
        },
        "endLoc": {
          "line": 45,
          "column": 21,
          "position": 380
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")\n      expect(console.log).toHaveBeenCalledWith('Profile already exists (created by trigger):'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 73,
        "end": 74,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 612
        },
        "endLoc": {
          "line": 74,
          "column": 47,
          "position": 624
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 56,
        "end": 57,
        "startLoc": {
          "line": 56,
          "column": 2,
          "position": 433
        },
        "endLoc": {
          "line": 57,
          "column": 18,
          "position": 445
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "()\n\n      expect(console.error).toHaveBeenCalledWith('Error creating profile:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\profile-utils.test.ts",
        "start": 84,
        "end": 86,
        "startLoc": {
          "line": 84,
          "column": 14,
          "position": 716
        },
        "endLoc": {
          "line": 86,
          "column": 26,
          "position": 730
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 109,
        "end": 98,
        "startLoc": {
          "line": 109,
          "column": 5,
          "position": 898
        },
        "endLoc": {
          "line": 98,
          "column": 16,
          "position": 797
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "} from 'next/server'\r\nimport { z } from 'zod'\r\nimport { createSupabaseServerClient } from '../../lib/supabase-server'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.ts",
        "start": 1,
        "end": 3,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 3,
          "column": 28,
          "position": 36
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.ts",
        "start": 1,
        "end": 3,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 3,
          "column": 37,
          "position": 36
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ") {\r\n  return NextResponse.json({ error: message",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.ts",
        "start": 8,
        "end": 9,
        "startLoc": {
          "line": 8,
          "column": 7,
          "position": 60
        },
        "endLoc": {
          "line": 9,
          "column": 8,
          "position": 77
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.ts",
        "start": 14,
        "end": 16,
        "startLoc": {
          "line": 14,
          "column": 6,
          "position": 128
        },
        "endLoc": {
          "line": 16,
          "column": 6,
          "position": 148
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "{\r\n  const supabase = await createSupabaseServerClient()\r\n  const { data:",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.ts",
        "start": 71,
        "end": 73,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 616
        },
        "endLoc": {
          "line": 73,
          "column": 2,
          "position": 639
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.ts",
        "start": 5,
        "end": 19,
        "startLoc": {
          "line": 5,
          "column": 2,
          "position": 44
        },
        "endLoc": {
          "line": 19,
          "column": 2,
          "position": 200
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "})\r\n\r\n  if (error) {\r\n    console.error('Supabase session error:'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.ts",
        "start": 81,
        "end": 84,
        "startLoc": {
          "line": 81,
          "column": 3,
          "position": 730
        },
        "endLoc": {
          "line": 84,
          "column": 26,
          "position": 751
        }
      },
      "secondFile": {
        "name": "src\\lib\\registration-handler.ts",
        "start": 39,
        "end": 42,
        "startLoc": {
          "line": 39,
          "column": 5,
          "position": 359
        },
        "endLoc": {
          "line": 42,
          "column": 25,
          "position": 377
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "import { describe, it, expect, vi, beforeEach } from 'vitest'\nimport { NextResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 13,
          "position": 28
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 4,
          "position": 28
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "} from 'vitest'\nimport { NextResponse } from 'next/server'\nimport { z",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 1,
        "end": 3,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 18
        },
        "endLoc": {
          "line": 3,
          "column": 2,
          "position": 40
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 2,
        "end": 4,
        "startLoc": {
          "line": 2,
          "column": 2,
          "position": 23
        },
        "endLoc": {
          "line": 4,
          "column": 5,
          "position": 45
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "import { NextResponse } from 'next/server'\nimport { z } from 'zod'\nimport { TEST_CONSTANTS",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 2,
        "end": 4,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 24
        },
        "endLoc": {
          "line": 4,
          "column": 15,
          "position": 52
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.ts",
        "start": 1,
        "end": 3,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 3,
          "column": 27,
          "position": 30
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "vi.mock('next/server', () => ({\n  NextResponse: {\n    json: vi.fn((",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 15,
        "end": 17,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 96
        },
        "endLoc": {
          "line": 17,
          "column": 2,
          "position": 125
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 5,
        "end": 7,
        "startLoc": {
          "line": 5,
          "column": 1,
          "position": 39
        },
        "endLoc": {
          "line": 7,
          "column": 2,
          "position": 68
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", () => ({\n  createSupabaseServerClient: vi.fn((",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 31,
        "end": 32,
        "startLoc": {
          "line": 31,
          "column": 28,
          "position": 233
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 251
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 12,
        "end": 13,
        "startLoc": {
          "line": 12,
          "column": 37,
          "position": 85
        },
        "endLoc": {
          "line": 13,
          "column": 2,
          "position": 103
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ").mockImplementation(() => {})\n\n// Helper functions to reduce duplication",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 37,
        "end": 39,
        "startLoc": {
          "line": 37,
          "column": 8,
          "position": 312
        },
        "endLoc": {
          "line": 39,
          "column": 42,
          "position": 326
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 36,
        "end": 37,
        "startLoc": {
          "line": 36,
          "column": 6,
          "position": 285
        },
        "endLoc": {
          "line": 37,
          "column": 6,
          "position": 298
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "=> ({\n  json: vi.fn().mockResolvedValue(data",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 40,
        "end": 41,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 341
        },
        "endLoc": {
          "line": 41,
          "column": 5,
          "position": 358
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 7,
        "end": 8,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 72
        },
        "endLoc": {
          "line": 8,
          "column": 5,
          "position": 89
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ") => ({\n  json: vi.fn().mockRejectedValue",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 44,
        "end": 45,
        "startLoc": {
          "line": 44,
          "column": 6,
          "position": 386
        },
        "endLoc": {
          "line": 45,
          "column": 18,
          "position": 403
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 40,
        "end": 8,
        "startLoc": {
          "line": 40,
          "column": 7,
          "position": 339
        },
        "endLoc": {
          "line": 8,
          "column": 18,
          "position": 87
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n} as Pick<Request, 'json'>)\n\nconst expectErrorResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 45,
        "end": 48,
        "startLoc": {
          "line": 45,
          "column": 6,
          "position": 406
        },
        "endLoc": {
          "line": 48,
          "column": 20,
          "position": 424
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 41,
        "end": 44,
        "startLoc": {
          "line": 41,
          "column": 5,
          "position": 359
        },
        "endLoc": {
          "line": 44,
          "column": 27,
          "position": 377
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "expect(NextResponse.json).toHaveBeenCalledWith(\n    { error: message",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 49,
        "end": 50,
        "startLoc": {
          "line": 49,
          "column": 3,
          "position": 446
        },
        "endLoc": {
          "line": 50,
          "column": 8,
          "position": 462
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 54,
        "end": 75,
        "startLoc": {
          "line": 54,
          "column": 7,
          "position": 414
        },
        "endLoc": {
          "line": 75,
          "column": 15,
          "position": 597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(\n    { error: message },\n    { status }\n  )\n}\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 49,
        "end": 55,
        "startLoc": {
          "line": 49,
          "column": 21,
          "position": 454
        },
        "endLoc": {
          "line": 55,
          "column": 6,
          "position": 480
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.ts",
        "start": 9,
        "end": 14,
        "startLoc": {
          "line": 9,
          "column": 5,
          "position": 71
        },
        "endLoc": {
          "line": 14,
          "column": 4,
          "position": 95
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "z.object({\n  email: z.email(),\n  password: z.string().min(TEST_CONSTANTS",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 64,
        "end": 66,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 559
        },
        "endLoc": {
          "line": 66,
          "column": 15,
          "position": 588
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.ts",
        "start": 6,
        "end": 10,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 66
        },
        "endLoc": {
          "line": 10,
          "column": 20,
          "position": 104
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "expect(result.error).toBeUndefined()\n}\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 80,
        "end": 83,
        "startLoc": {
          "line": 80,
          "column": 3,
          "position": 755
        },
        "endLoc": {
          "line": 83,
          "column": 6,
          "position": 769
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 74,
        "end": 76,
        "startLoc": {
          "line": 74,
          "column": 5,
          "position": 683
        },
        "endLoc": {
          "line": 76,
          "column": 2,
          "position": 697
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ") => {\n  expect(result.session).toBeNull",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 83,
        "end": 84,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 798
        },
        "endLoc": {
          "line": 84,
          "column": 9,
          "position": 812
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 78,
        "end": 79,
        "startLoc": {
          "line": 78,
          "column": 7,
          "position": 735
        },
        "endLoc": {
          "line": 79,
          "column": 8,
          "position": 749
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "expect(result.error).toBeDefined()\n}\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 85,
        "end": 88,
        "startLoc": {
          "line": 85,
          "column": 3,
          "position": 817
        },
        "endLoc": {
          "line": 88,
          "column": 6,
          "position": 831
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 72,
        "end": 73,
        "startLoc": {
          "line": 72,
          "column": 5,
          "position": 664
        },
        "endLoc": {
          "line": 73,
          "column": 5,
          "position": 678
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", () => {\n  beforeEach(() => {\n    vi.clearAllMocks()\n  })\n\n  describe",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 117,
        "end": 122,
        "startLoc": {
          "line": 117,
          "column": 17,
          "position": 1117
        },
        "endLoc": {
          "line": 122,
          "column": 9,
          "position": 1149
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\register\\route.test.ts",
        "start": 21,
        "end": 26,
        "startLoc": {
          "line": 21,
          "column": 21,
          "position": 175
        },
        "endLoc": {
          "line": 26,
          "column": 6,
          "position": 207
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ")\n\n      expect(NextResponse.json).toHaveBeenCalledWith(\n        { error: TEST_CONSTANTS",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 124,
        "end": 127,
        "startLoc": {
          "line": 124,
          "column": 9,
          "position": 1191
        },
        "endLoc": {
          "line": 127,
          "column": 15,
          "position": 1211
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 53,
        "end": 75,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 411
        },
        "endLoc": {
          "line": 75,
          "column": 15,
          "position": 597
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n      expect(result).toEqual({\n        json: { error: TEST_CONSTANTS",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 129,
        "end": 131,
        "startLoc": {
          "line": 129,
          "column": 7,
          "position": 1231
        },
        "endLoc": {
          "line": 131,
          "column": 15,
          "position": 1252
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 107,
        "end": 109,
        "startLoc": {
          "line": 107,
          "column": 15,
          "position": 1067
        },
        "endLoc": {
          "line": 109,
          "column": 16,
          "position": 1088
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n\n      expect(NextResponse.json).toHaveBeenCalledWith(data",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 145,
        "end": 147,
        "startLoc": {
          "line": 145,
          "column": 5,
          "position": 1385
        },
        "endLoc": {
          "line": 147,
          "column": 5,
          "position": 1398
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 53,
        "end": 54,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 411
        },
        "endLoc": {
          "line": 54,
          "column": 2,
          "position": 423
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "})\n      expect(result).toEqual({\n        json: data",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 147,
        "end": 149,
        "startLoc": {
          "line": 147,
          "column": 2,
          "position": 1408
        },
        "endLoc": {
          "line": 149,
          "column": 5,
          "position": 1425
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 128,
        "end": 109,
        "startLoc": {
          "line": 128,
          "column": 2,
          "position": 1228
        },
        "endLoc": {
          "line": 109,
          "column": 2,
          "position": 1083
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n\n      expect(NextResponse.json).toHaveBeenCalledWith(data, { status: TEST_CONSTANTS",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 156,
        "end": 158,
        "startLoc": {
          "line": 156,
          "column": 9,
          "position": 1481
        },
        "endLoc": {
          "line": 158,
          "column": 15,
          "position": 1502
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 53,
        "end": 147,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 411
        },
        "endLoc": {
          "line": 147,
          "column": 4,
          "position": 1406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "createSuccessResponse(data)\n\n      expect(NextResponse.json).toHaveBeenCalledWith(data, { status: 200 })\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 169,
        "end": 172,
        "startLoc": {
          "line": 169,
          "column": 7,
          "position": 1581
        },
        "endLoc": {
          "line": 172,
          "column": 2,
          "position": 1611
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 145,
        "end": 148,
        "startLoc": {
          "line": 145,
          "column": 2,
          "position": 1382
        },
        "endLoc": {
          "line": 148,
          "column": 7,
          "position": 1412
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n        expect(result).toEqual({\n          json: { error: TEST_CONSTANTS.INVALID_INPUT_MESSAGE",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 183,
        "end": 185,
        "startLoc": {
          "line": 183,
          "column": 9,
          "position": 1731
        },
        "endLoc": {
          "line": 185,
          "column": 22,
          "position": 1754
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 107,
        "end": 131,
        "startLoc": {
          "line": 107,
          "column": 15,
          "position": 1067
        },
        "endLoc": {
          "line": 131,
          "column": 19,
          "position": 1254
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "},\n          status: TEST_CONSTANTS.HTTP_400\n        })\n      }\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 185,
        "end": 189,
        "startLoc": {
          "line": 185,
          "column": 2,
          "position": 1756
        },
        "endLoc": {
          "line": 189,
          "column": 2,
          "position": 1775
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 131,
        "end": 134,
        "startLoc": {
          "line": 131,
          "column": 2,
          "position": 1256
        },
        "endLoc": {
          "line": 134,
          "column": 2,
          "position": 1273
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "() => {\n      const error = new Error('Something went wrong'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 191,
        "end": 192,
        "startLoc": {
          "line": 191,
          "column": 2,
          "position": 1785
        },
        "endLoc": {
          "line": 192,
          "column": 23,
          "position": 1803
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 64,
        "end": 65,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 491
        },
        "endLoc": {
          "line": 65,
          "column": 15,
          "position": 509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "testAuthApiErrorResponse(error, TEST_CONSTANTS.INTERNAL_SERVER_ERROR_MESSAGE, TEST_CONSTANTS.HTTP_500)\n    })\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 198,
        "end": 200,
        "startLoc": {
          "line": 198,
          "column": 7,
          "position": 1857
        },
        "endLoc": {
          "line": 200,
          "column": 2,
          "position": 1877
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 193,
        "end": 196,
        "startLoc": {
          "line": 193,
          "column": 7,
          "position": 1807
        },
        "endLoc": {
          "line": 196,
          "column": 3,
          "position": 1828
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ", TEST_CONSTANTS.HTTP_500)\n    })\n  })\n\n  describe('handleSupabaseError'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 198,
        "end": 202,
        "startLoc": {
          "line": 198,
          "column": 30,
          "position": 1865
        },
        "endLoc": {
          "line": 202,
          "column": 22,
          "position": 1884
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 138,
        "end": 142,
        "startLoc": {
          "line": 138,
          "column": 15,
          "position": 1304
        },
        "endLoc": {
          "line": 142,
          "column": 24,
          "position": 1323
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", () => {\n      const error = { message: TEST_CONSTANTS",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 203,
        "end": 204,
        "startLoc": {
          "line": 203,
          "column": 53,
          "position": 1898
        },
        "endLoc": {
          "line": 204,
          "column": 15,
          "position": 1919
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 196,
        "end": 197,
        "startLoc": {
          "line": 196,
          "column": 59,
          "position": 1831
        },
        "endLoc": {
          "line": 197,
          "column": 23,
          "position": 1852
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", TEST_CONSTANTS.HTTP_400)\n      expect(result).toEqual({\n        json: { error: TEST_CONSTANTS.INVALID_CREDENTIALS_MESSAGE",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 207,
        "end": 209,
        "startLoc": {
          "line": 207,
          "column": 28,
          "position": 1944
        },
        "endLoc": {
          "line": 209,
          "column": 28,
          "position": 1972
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 183,
        "end": 131,
        "startLoc": {
          "line": 183,
          "column": 22,
          "position": 1726
        },
        "endLoc": {
          "line": 131,
          "column": 19,
          "position": 1254
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "},\n        status: TEST_CONSTANTS.HTTP_400\n      })\n    })\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 209,
        "end": 213,
        "startLoc": {
          "line": 209,
          "column": 2,
          "position": 1974
        },
        "endLoc": {
          "line": 213,
          "column": 2,
          "position": 1994
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 131,
        "end": 136,
        "startLoc": {
          "line": 131,
          "column": 2,
          "position": 1256
        },
        "endLoc": {
          "line": 136,
          "column": 3,
          "position": 1277
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const schema = createEmailPasswordSchema()\n      const invalidData",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 226,
        "end": 228,
        "startLoc": {
          "line": 226,
          "column": 59,
          "position": 2117
        },
        "endLoc": {
          "line": 228,
          "column": 12,
          "position": 2142
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 216,
        "end": 218,
        "startLoc": {
          "line": 216,
          "column": 47,
          "position": 2015
        },
        "endLoc": {
          "line": 218,
          "column": 9,
          "position": 2040
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n\n      const result = await parseRequestBody(mockRequest as Request, schema)\n\n      expectParseRequestResult(result, {",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 229,
        "end": 233,
        "startLoc": {
          "line": 229,
          "column": 12,
          "position": 2171
        },
        "endLoc": {
          "line": 233,
          "column": 2,
          "position": 2202
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 219,
        "end": 223,
        "startLoc": {
          "line": 219,
          "column": 9,
          "position": 2071
        },
        "endLoc": {
          "line": 223,
          "column": 9,
          "position": 2102
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\n      expectErrorResponse(TEST_CONSTANTS.INVALID_INPUT_MESSAGE, TEST_CONSTANTS.HTTP_400)\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 233,
        "end": 235,
        "startLoc": {
          "line": 233,
          "column": 5,
          "position": 2207
        },
        "endLoc": {
          "line": 235,
          "column": 2,
          "position": 2223
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 181,
        "end": 184,
        "startLoc": {
          "line": 181,
          "column": 9,
          "position": 1717
        },
        "endLoc": {
          "line": 184,
          "column": 7,
          "position": 1734
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "() => {\n      const schema = z.object({ test",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 237,
        "end": 238,
        "startLoc": {
          "line": 237,
          "column": 2,
          "position": 2235
        },
        "endLoc": {
          "line": 238,
          "column": 5,
          "position": 2255
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 176,
        "end": 177,
        "startLoc": {
          "line": 176,
          "column": 2,
          "position": 1638
        },
        "endLoc": {
          "line": 177,
          "column": 6,
          "position": 1658
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ")\n\n      const result = await parseRequestBody(mockRequest as Request, schema)\n\n      expectParseRequestResult(result, {}, true)\n      expectErrorResponse(TEST_CONSTANTS.INTERNAL_SERVER_ERROR_MESSAGE",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 239,
        "end": 244,
        "startLoc": {
          "line": 239,
          "column": 2,
          "position": 2282
        },
        "endLoc": {
          "line": 244,
          "column": 30,
          "position": 2325
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 219,
        "end": 234,
        "startLoc": {
          "line": 219,
          "column": 9,
          "position": 2071
        },
        "endLoc": {
          "line": 234,
          "column": 22,
          "position": 2214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "TEST_CONSTANTS.INTERNAL_SERVER_ERROR_MESSAGE, TEST_CONSTANTS.HTTP_500)\n    })\n  })\n\n  describe('validateSession'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 244,
        "end": 248,
        "startLoc": {
          "line": 244,
          "column": 2,
          "position": 2323
        },
        "endLoc": {
          "line": 248,
          "column": 18,
          "position": 2345
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 193,
        "end": 142,
        "startLoc": {
          "line": 193,
          "column": 2,
          "position": 1812
        },
        "endLoc": {
          "line": 142,
          "column": 24,
          "position": 1323
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const mockSession = { user: { id: 'user-123'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 249,
        "end": 250,
        "startLoc": {
          "line": 249,
          "column": 50,
          "position": 2359
        },
        "endLoc": {
          "line": 250,
          "column": 11,
          "position": 2387
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 37,
        "end": 39,
        "startLoc": {
          "line": 37,
          "column": 61,
          "position": 303
        },
        "endLoc": {
          "line": 39,
          "column": 15,
          "position": 332
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const mockSession = { user: { id: 'user-123' } }\n      await testValidSessionScenario(mockSession, true",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 254,
        "end": 256,
        "startLoc": {
          "line": 254,
          "column": 74,
          "position": 2416
        },
        "endLoc": {
          "line": 256,
          "column": 5,
          "position": 2458
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 37,
        "end": 251,
        "startLoc": {
          "line": 37,
          "column": 61,
          "position": 303
        },
        "endLoc": {
          "line": 251,
          "column": 6,
          "position": 2401
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "mockSupabaseClient.auth.getSession.mockResolvedValue({\n        data: { session:",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 262,
        "end": 263,
        "startLoc": {
          "line": 262,
          "column": 7,
          "position": 2502
        },
        "endLoc": {
          "line": 263,
          "column": 2,
          "position": 2519
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 89,
        "end": 90,
        "startLoc": {
          "line": 89,
          "column": 3,
          "position": 867
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 885
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "session: null },\n        error: supabaseError\n      })\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 263,
        "end": 267,
        "startLoc": {
          "line": 263,
          "column": 2,
          "position": 2518
        },
        "endLoc": {
          "line": 267,
          "column": 6,
          "position": 2538
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 125,
        "end": 129,
        "startLoc": {
          "line": 125,
          "column": 2,
          "position": 1010
        },
        "endLoc": {
          "line": 129,
          "column": 13,
          "position": 1030
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ") => {\n      mockSupabaseClient.auth.getSession.mockResolvedValue({\n        data: { session: null },\n        error: null",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 274,
        "end": 277,
        "startLoc": {
          "line": 274,
          "column": 2,
          "position": 2596
        },
        "endLoc": {
          "line": 277,
          "column": 5,
          "position": 2631
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 88,
        "end": 264,
        "startLoc": {
          "line": 88,
          "column": 5,
          "position": 860
        },
        "endLoc": {
          "line": 264,
          "column": 14,
          "position": 2530
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "session: null },\n        error: null\n      })\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 276,
        "end": 280,
        "startLoc": {
          "line": 276,
          "column": 2,
          "position": 2619
        },
        "endLoc": {
          "line": 280,
          "column": 6,
          "position": 2639
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 164,
        "end": 168,
        "startLoc": {
          "line": 164,
          "column": 2,
          "position": 1324
        },
        "endLoc": {
          "line": 168,
          "column": 13,
          "position": 1344
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "})\n\n      const result = await validateSession()\n\n      expectInvalidSessionResult(result)\n      expectErrorResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 278,
        "end": 283,
        "startLoc": {
          "line": 278,
          "column": 7,
          "position": 2634
        },
        "endLoc": {
          "line": 283,
          "column": 20,
          "position": 2659
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 265,
        "end": 270,
        "startLoc": {
          "line": 265,
          "column": 7,
          "position": 2533
        },
        "endLoc": {
          "line": 270,
          "column": 7,
          "position": 2558
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ", async () => {\n      const mockSession = {\n        user: null\n      }\n\n      mockSupabaseClient",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 287,
        "end": 292,
        "startLoc": {
          "line": 287,
          "column": 78,
          "position": 2690
        },
        "endLoc": {
          "line": 292,
          "column": 19,
          "position": 2721
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 37,
        "end": 74,
        "startLoc": {
          "line": 37,
          "column": 61,
          "position": 303
        },
        "endLoc": {
          "line": 74,
          "column": 6,
          "position": 608
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "}\n\n      mockSupabaseClient.auth.getSession.mockResolvedValue({\n        data: { session: mockSession",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 290,
        "end": 293,
        "startLoc": {
          "line": 290,
          "column": 7,
          "position": 2717
        },
        "endLoc": {
          "line": 293,
          "column": 12,
          "position": 2740
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 260,
        "end": 263,
        "startLoc": {
          "line": 260,
          "column": 2,
          "position": 2498
        },
        "endLoc": {
          "line": 263,
          "column": 5,
          "position": 2521
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "session: mockSession },\n        error: null\n      })\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 293,
        "end": 297,
        "startLoc": {
          "line": 293,
          "column": 2,
          "position": 2737
        },
        "endLoc": {
          "line": 297,
          "column": 6,
          "position": 2757
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\login\\route.test.ts",
        "start": 66,
        "end": 70,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 526
        },
        "endLoc": {
          "line": 70,
          "column": 13,
          "position": 546
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "},\n        error: null\n      })\n\n      const result = await validateSession(true",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 293,
        "end": 297,
        "startLoc": {
          "line": 293,
          "column": 2,
          "position": 2742
        },
        "endLoc": {
          "line": 297,
          "column": 5,
          "position": 2767
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 276,
        "end": 280,
        "startLoc": {
          "line": 276,
          "column": 2,
          "position": 2624
        },
        "endLoc": {
          "line": 280,
          "column": 2,
          "position": 2649
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n\n      expectInvalidSessionResult(result)\n      expectErrorResponse('No active session', TEST_CONSTANTS.HTTP_401)\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 297,
        "end": 301,
        "startLoc": {
          "line": 297,
          "column": 5,
          "position": 2768
        },
        "endLoc": {
          "line": 301,
          "column": 2,
          "position": 2789
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 280,
        "end": 284,
        "startLoc": {
          "line": 280,
          "column": 2,
          "position": 2649
        },
        "endLoc": {
          "line": 284,
          "column": 17,
          "position": 2670
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const mockSession = { user: null }\n      await",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 303,
        "end": 305,
        "startLoc": {
          "line": 303,
          "column": 84,
          "position": 2797
        },
        "endLoc": {
          "line": 305,
          "column": 6,
          "position": 2825
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 37,
        "end": 74,
        "startLoc": {
          "line": 37,
          "column": 61,
          "position": 303
        },
        "endLoc": {
          "line": 74,
          "column": 6,
          "position": 608
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "}\n      await testValidSessionScenario(mockSession, false, true)\n    })\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 304,
        "end": 307,
        "startLoc": {
          "line": 304,
          "column": 2,
          "position": 2822
        },
        "endLoc": {
          "line": 307,
          "column": 2,
          "position": 2843
        }
      },
      "secondFile": {
        "name": "src\\lib\\auth-api-utils.test.ts",
        "start": 250,
        "end": 254,
        "startLoc": {
          "line": 250,
          "column": 2,
          "position": 2391
        },
        "endLoc": {
          "line": 254,
          "column": 3,
          "position": 2413
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": "(endpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\useAuthForm.ts",
        "start": 28,
        "end": 31,
        "startLoc": {
          "line": 28,
          "column": 6,
          "position": 293
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 320
        }
      },
      "secondFile": {
        "name": "src\\test\\test-utils.ts",
        "start": 208,
        "end": 212,
        "startLoc": {
          "line": 208,
          "column": 21,
          "position": 1661
        },
        "endLoc": {
          "line": 212,
          "column": 2,
          "position": 1687
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ")\r\n\r\n      const data = await response.json() as AuthFormData",
      "tokens": 0,
      "firstFile": {
        "name": "src\\hooks\\useAuthForm.ts",
        "start": 34,
        "end": 36,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 343
        },
        "endLoc": {
          "line": 36,
          "column": 13,
          "position": 365
        }
      },
      "secondFile": {
        "name": "src\\hooks\\useAuthRedirect.ts",
        "start": 15,
        "end": 16,
        "startLoc": {
          "line": 15,
          "column": 20,
          "position": 123
        },
        "endLoc": {
          "line": 16,
          "column": 2,
          "position": 143
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")) {\n    return NextResponse.redirect(new URL(LOGIN_PATH, request.url))\n  }\n\n  // If user is signed in and the current path is an auth page, redirect to dashboard",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.ts",
        "start": 20,
        "end": 24,
        "startLoc": {
          "line": 20,
          "column": 8,
          "position": 196
        },
        "endLoc": {
          "line": 24,
          "column": 84,
          "position": 226
        }
      },
      "secondFile": {
        "name": "src\\middleware.ts",
        "start": 16,
        "end": 20,
        "startLoc": {
          "line": 16,
          "column": 15,
          "position": 149
        },
        "endLoc": {
          "line": 20,
          "column": 3,
          "position": 179
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ")) {\n    return NextResponse.redirect(new URL(DASHBOARD_PATH",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.ts",
        "start": 25,
        "end": 26,
        "startLoc": {
          "line": 25,
          "column": 8,
          "position": 245
        },
        "endLoc": {
          "line": 26,
          "column": 15,
          "position": 261
        }
      },
      "secondFile": {
        "name": "src\\middleware.ts",
        "start": 16,
        "end": 17,
        "startLoc": {
          "line": 16,
          "column": 15,
          "position": 149
        },
        "endLoc": {
          "line": 17,
          "column": 11,
          "position": 165
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": "import { describe, it, expect, vi, beforeEach } from 'vitest'\nimport { NextRequest",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 12,
          "position": 28
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\session\\route.test.ts",
        "start": 1,
        "end": 2,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 2,
          "column": 4,
          "position": 28
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": ": vi.fn()\n    }\n  }\n})\n\ndescribe",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 12,
        "end": 17,
        "startLoc": {
          "line": 12,
          "column": 5,
          "position": 112
        },
        "endLoc": {
          "line": 17,
          "column": 9,
          "position": 130
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\reset-password\\route.test.ts",
        "start": 24,
        "end": 27,
        "startLoc": {
          "line": 24,
          "column": 11,
          "position": 201
        },
        "endLoc": {
          "line": 27,
          "column": 2,
          "position": 217
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": "}\n\n  beforeEach(async () => {\n    vi.clearAllMocks()\n    NextResponse",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 27,
        "end": 31,
        "startLoc": {
          "line": 27,
          "column": 3,
          "position": 193
        },
        "endLoc": {
          "line": 31,
          "column": 13,
          "position": 216
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 25,
        "end": 16,
        "startLoc": {
          "line": 25,
          "column": 3,
          "position": 178
        },
        "endLoc": {
          "line": 16,
          "column": 13,
          "position": 133
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": "()\n    NextResponse = (await import('next/server')).NextResponse\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 30,
        "end": 32,
        "startLoc": {
          "line": 30,
          "column": 14,
          "position": 212
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 232
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\auth\\logout\\route.test.ts",
        "start": 30,
        "end": 32,
        "startLoc": {
          "line": 30,
          "column": 3,
          "position": 223
        },
        "endLoc": {
          "line": 32,
          "column": 15,
          "position": 243
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = createRequest('/auth/register'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 57,
        "end": 58,
        "startLoc": {
          "line": 57,
          "column": 70,
          "position": 459
        },
        "endLoc": {
          "line": 58,
          "column": 17,
          "position": 479
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 49,
        "end": 50,
        "startLoc": {
          "line": 49,
          "column": 61,
          "position": 387
        },
        "endLoc": {
          "line": 50,
          "column": 6,
          "position": 407
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", authCookies)\n\n      await middleware(request)\n\n      expect(NextResponse.redirect).toHaveBeenCalledWith(new URL(PATHS.DASHBOARD, request.url))\n    })\n\n    it('should allow authenticated user to access dashboard'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 58,
        "end": 65,
        "startLoc": {
          "line": 58,
          "column": 17,
          "position": 480
        },
        "endLoc": {
          "line": 65,
          "column": 54,
          "position": 528
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 50,
        "end": 57,
        "startLoc": {
          "line": 50,
          "column": 11,
          "position": 410
        },
        "endLoc": {
          "line": 57,
          "column": 70,
          "position": 458
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = createRequest(PATHS.DASHBOARD",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 65,
        "end": 66,
        "startLoc": {
          "line": 65,
          "column": 54,
          "position": 529
        },
        "endLoc": {
          "line": 66,
          "column": 10,
          "position": 551
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 49,
        "end": 50,
        "startLoc": {
          "line": 49,
          "column": 61,
          "position": 387
        },
        "endLoc": {
          "line": 50,
          "column": 11,
          "position": 409
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ", authCookies)\n\n      await middleware(request)\n\n      expect(NextResponse.redirect).not",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 66,
        "end": 70,
        "startLoc": {
          "line": 66,
          "column": 10,
          "position": 552
        },
        "endLoc": {
          "line": 70,
          "column": 4,
          "position": 575
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 50,
        "end": 54,
        "startLoc": {
          "line": 50,
          "column": 11,
          "position": 410
        },
        "endLoc": {
          "line": 54,
          "column": 21,
          "position": 433
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = createRequest('/chat'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 74,
        "end": 75,
        "startLoc": {
          "line": 74,
          "column": 49,
          "position": 602
        },
        "endLoc": {
          "line": 75,
          "column": 8,
          "position": 622
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 49,
        "end": 50,
        "startLoc": {
          "line": 49,
          "column": 61,
          "position": 387
        },
        "endLoc": {
          "line": 50,
          "column": 6,
          "position": 407
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ", authCookies)\n\n      await middleware(request)\n\n      expect(NextResponse.redirect).not.toHaveBeenCalled()\n      expect(NextResponse.next).toHaveBeenCalled()\n    })\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 75,
        "end": 82,
        "startLoc": {
          "line": 75,
          "column": 8,
          "position": 623
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 669
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 50,
        "end": 74,
        "startLoc": {
          "line": 50,
          "column": 11,
          "position": 410
        },
        "endLoc": {
          "line": 74,
          "column": 3,
          "position": 599
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = createRequest(PATHS.DASHBOARD)",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 85,
        "end": 86,
        "startLoc": {
          "line": 85,
          "column": 63,
          "position": 690
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 713
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 49,
        "end": 66,
        "startLoc": {
          "line": 49,
          "column": 61,
          "position": 387
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 552
        }
      }
    },
    {
      "format": "typescript",
      "lines": 5,
      "fragment": ")\n\n      await middleware(request)\n\n      expect(NextResponse.redirect).toHaveBeenCalledWith(new URL(PATHS.AUTH_LOGIN",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 86,
        "end": 90,
        "startLoc": {
          "line": 86,
          "column": 10,
          "position": 713
        },
        "endLoc": {
          "line": 90,
          "column": 11,
          "position": 741
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 50,
        "end": 54,
        "startLoc": {
          "line": 50,
          "column": 12,
          "position": 413
        },
        "endLoc": {
          "line": 54,
          "column": 10,
          "position": 441
        }
      }
    },
    {
      "format": "typescript",
      "lines": 4,
      "fragment": ", request.url))\n    })\n\n    it('should redirect unauthenticated user from chat to login'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 90,
        "end": 93,
        "startLoc": {
          "line": 90,
          "column": 11,
          "position": 742
        },
        "endLoc": {
          "line": 93,
          "column": 58,
          "position": 758
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 54,
        "end": 57,
        "startLoc": {
          "line": 54,
          "column": 10,
          "position": 442
        },
        "endLoc": {
          "line": 57,
          "column": 70,
          "position": 458
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = createRequest('/chat')",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 93,
        "end": 94,
        "startLoc": {
          "line": 93,
          "column": 58,
          "position": 759
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 780
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 49,
        "end": 75,
        "startLoc": {
          "line": 49,
          "column": 61,
          "position": 387
        },
        "endLoc": {
          "line": 75,
          "column": 2,
          "position": 623
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ")\n\n      await middleware(request)\n\n      expect(NextResponse.redirect).toHaveBeenCalledWith(new URL(PATHS.AUTH_LOGIN, request.url))\n    })\n\n    it('should allow unauthenticated user to access auth pages'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 94,
        "end": 101,
        "startLoc": {
          "line": 94,
          "column": 8,
          "position": 780
        },
        "endLoc": {
          "line": 101,
          "column": 57,
          "position": 825
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 50,
        "end": 57,
        "startLoc": {
          "line": 50,
          "column": 12,
          "position": 413
        },
        "endLoc": {
          "line": 57,
          "column": 70,
          "position": 458
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = createRequest(PATHS.AUTH_LOGIN)",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 101,
        "end": 102,
        "startLoc": {
          "line": 101,
          "column": 57,
          "position": 826
        },
        "endLoc": {
          "line": 102,
          "column": 2,
          "position": 849
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 49,
        "end": 50,
        "startLoc": {
          "line": 49,
          "column": 61,
          "position": 387
        },
        "endLoc": {
          "line": 50,
          "column": 2,
          "position": 410
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ")\n\n      await middleware(request)\n\n      expect(NextResponse.redirect).not.toHaveBeenCalled()\n      expect(NextResponse.next).toHaveBeenCalled()\n    })\n\n    it('should allow unauthenticated user to access public pages'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 102,
        "end": 110,
        "startLoc": {
          "line": 102,
          "column": 11,
          "position": 849
        },
        "endLoc": {
          "line": 110,
          "column": 59,
          "position": 895
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 50,
        "end": 74,
        "startLoc": {
          "line": 50,
          "column": 12,
          "position": 413
        },
        "endLoc": {
          "line": 74,
          "column": 49,
          "position": 601
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = createRequest('/'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 110,
        "end": 111,
        "startLoc": {
          "line": 110,
          "column": 59,
          "position": 896
        },
        "endLoc": {
          "line": 111,
          "column": 4,
          "position": 916
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 49,
        "end": 50,
        "startLoc": {
          "line": 49,
          "column": 61,
          "position": 387
        },
        "endLoc": {
          "line": 50,
          "column": 6,
          "position": 407
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ")\n\n      await middleware(request)\n\n      expect(NextResponse.redirect).not.toHaveBeenCalled()\n      expect(NextResponse.next).toHaveBeenCalled()\n    })\n  })\n\n  describe('auth cookie detection'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 111,
        "end": 120,
        "startLoc": {
          "line": 111,
          "column": 4,
          "position": 917
        },
        "endLoc": {
          "line": 120,
          "column": 24,
          "position": 967
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 50,
        "end": 84,
        "startLoc": {
          "line": 50,
          "column": 12,
          "position": 413
        },
        "endLoc": {
          "line": 84,
          "column": 23,
          "position": 676
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = createRequest(PATHS.AUTH_LOGIN, [",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 121,
        "end": 122,
        "startLoc": {
          "line": 121,
          "column": 63,
          "position": 981
        },
        "endLoc": {
          "line": 122,
          "column": 2,
          "position": 1006
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 49,
        "end": 50,
        "startLoc": {
          "line": 49,
          "column": 61,
          "position": 387
        },
        "endLoc": {
          "line": 50,
          "column": 12,
          "position": 412
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ")\n\n      await middleware(request)\n\n      expect(NextResponse.redirect).toHaveBeenCalledWith(new URL(PATHS.DASHBOARD, request.url))\n    })\n\n    it('should not detect non-auth supabase cookies'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 124,
        "end": 131,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 1026
        },
        "endLoc": {
          "line": 131,
          "column": 46,
          "position": 1071
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 50,
        "end": 57,
        "startLoc": {
          "line": 50,
          "column": 12,
          "position": 413
        },
        "endLoc": {
          "line": 57,
          "column": 70,
          "position": 458
        }
      }
    },
    {
      "format": "typescript",
      "lines": 2,
      "fragment": ", async () => {\n      const request = createRequest(PATHS.DASHBOARD, [",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 131,
        "end": 132,
        "startLoc": {
          "line": 131,
          "column": 46,
          "position": 1072
        },
        "endLoc": {
          "line": 132,
          "column": 2,
          "position": 1097
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 49,
        "end": 66,
        "startLoc": {
          "line": 49,
          "column": 61,
          "position": 387
        },
        "endLoc": {
          "line": 66,
          "column": 12,
          "position": 554
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "}\n      ])\n\n      await middleware(request)\n\n      expect(NextResponse.redirect).toHaveBeenCalledWith(new URL(PATHS.AUTH_LOGIN, request.url))\n    })\n\n    it('should not detect regular cookies'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 133,
        "end": 141,
        "startLoc": {
          "line": 133,
          "column": 2,
          "position": 1113
        },
        "endLoc": {
          "line": 141,
          "column": 36,
          "position": 1162
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 123,
        "end": 57,
        "startLoc": {
          "line": 123,
          "column": 2,
          "position": 1022
        },
        "endLoc": {
          "line": 57,
          "column": 70,
          "position": 458
        }
      }
    },
    {
      "format": "typescript",
      "lines": 3,
      "fragment": ", async () => {\n      const request = createRequest(PATHS.DASHBOARD, [\n        { name: 'regular-cookie'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 141,
        "end": 143,
        "startLoc": {
          "line": 141,
          "column": 36,
          "position": 1163
        },
        "endLoc": {
          "line": 143,
          "column": 17,
          "position": 1196
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 49,
        "end": 133,
        "startLoc": {
          "line": 49,
          "column": 61,
          "position": 387
        },
        "endLoc": {
          "line": 133,
          "column": 18,
          "position": 1105
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "}\n      ])\n\n      await middleware(request)\n\n      expect(NextResponse.redirect).toHaveBeenCalledWith(new URL(PATHS.AUTH_LOGIN, request.url))\n    })\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src\\middleware.test.ts",
        "start": 143,
        "end": 150,
        "startLoc": {
          "line": 143,
          "column": 2,
          "position": 1204
        },
        "endLoc": {
          "line": 150,
          "column": 2,
          "position": 1250
        }
      },
      "secondFile": {
        "name": "src\\middleware.test.ts",
        "start": 123,
        "end": 93,
        "startLoc": {
          "line": 123,
          "column": 2,
          "position": 1022
        },
        "endLoc": {
          "line": 93,
          "column": 3,
          "position": 756
        }
      }
    }
  ],
  "filename": "C:\\Users\\david\\Documents\\jeffaisquared\\node_modules\\@jscpd\\html-reporter\\dist\\templates\\main.pug"
}