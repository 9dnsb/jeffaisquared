{
  "statistics": {
    "detectionDate": "2025-09-17T23:35:19.044Z",
    "formats": {
      "typescript": {
        "sources": {
          "src/app/api/conversations/[id]/route.ts": {
            "lines": 348,
            "tokens": 2670,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 112,
            "duplicatedTokens": 892,
            "percentage": 32.18,
            "percentageTokens": 33.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/session/route.ts": {
            "lines": 14,
            "tokens": 121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/session/route.test.ts": {
            "lines": 85,
            "tokens": 699,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/reset-password/route.ts": {
            "lines": 43,
            "tokens": 363,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/reset-password/route.test.ts": {
            "lines": 201,
            "tokens": 1192,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/register/route.ts": {
            "lines": 8,
            "tokens": 85,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/register/route.test.ts": {
            "lines": 45,
            "tokens": 208,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/logout/route.ts": {
            "lines": 30,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/logout/route.test.ts": {
            "lines": 118,
            "tokens": 975,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/login/route.ts": {
            "lines": 39,
            "tokens": 376,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/login/route.test.ts": {
            "lines": 184,
            "tokens": 1277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/forgot-password/route.ts": {
            "lines": 31,
            "tokens": 269,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/auth/forgot-password/route.test.ts": {
            "lines": 143,
            "tokens": 946,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/conversations/route.ts": {
            "lines": 195,
            "tokens": 1492,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/app/api/chat/route.ts": {
            "lines": 496,
            "tokens": 3672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/validation/schemas.ts": {
            "lines": 397,
            "tokens": 4465,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 50,
            "duplicatedTokens": 568,
            "percentage": 12.59,
            "percentageTokens": 12.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/utils/logger.ts": {
            "lines": 299,
            "tokens": 2716,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/utils/conversations.ts": {
            "lines": 677,
            "tokens": 5286,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 184,
            "percentage": 2.66,
            "percentageTokens": 3.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/prisma/queryBuilder.ts": {
            "lines": 478,
            "tokens": 4118,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 326,
            "percentage": 6.69,
            "percentageTokens": 7.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/ai/intentClassifier.ts": {
            "lines": 518,
            "tokens": 3454,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/ai/generalChatHandler.ts": {
            "lines": 553,
            "tokens": 4055,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 23,
            "duplicatedTokens": 201,
            "percentage": 4.16,
            "percentageTokens": 4.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/ai/dataQueryHandler.ts": {
            "lines": 618,
            "tokens": 4437,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 326,
            "percentage": 5.18,
            "percentageTokens": 7.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/ai/clarificationHandler.ts": {
            "lines": 553,
            "tokens": 4014,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 23,
            "duplicatedTokens": 201,
            "percentage": 4.16,
            "percentageTokens": 5.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/chat.ts": {
            "lines": 345,
            "tokens": 2233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/test-utils.ts": {
            "lines": 473,
            "tokens": 4042,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/test/setup.ts": {
            "lines": 28,
            "tokens": 215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/registration-handler.ts": {
            "lines": 64,
            "tokens": 547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/registration-handler.test.ts": {
            "lines": 209,
            "tokens": 1731,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/profile-utils.ts": {
            "lines": 40,
            "tokens": 271,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/profile-utils.test.ts": {
            "lines": 92,
            "tokens": 533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth-api-utils.ts": {
            "lines": 92,
            "tokens": 864,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/auth-api-utils.test.ts": {
            "lines": 306,
            "tokens": 2847,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAuthRedirect.ts": {
            "lines": 32,
            "tokens": 251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useAuthForm.ts": {
            "lines": 68,
            "tokens": 641,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware.ts": {
            "lines": 33,
            "tokens": 306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/middleware.test.ts": {
            "lines": 150,
            "tokens": 1254,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 8005,
          "tokens": 62889,
          "sources": 36,
          "clones": 11,
          "duplicatedLines": 145,
          "duplicatedTokens": 1349,
          "percentage": 1.81,
          "percentageTokens": 2.15,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 8005,
      "tokens": 62889,
      "sources": 36,
      "clones": 11,
      "duplicatedLines": 145,
      "duplicatedTokens": 1349,
      "percentage": 1.81,
      "percentageTokens": 2.15,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", undefined, {\n        processingTime: duration,\n        conversationId\n      })\n      return sessionResult.error || NextResponse.json(\n        { error: 'Authentication required' },\n        { status: 401 }\n      )\n    }\n\n    const userId = sessionResult.session.user.id\n\n    // Validate conversation ownership\n    const ownershipResult = await validateConversationOwnership(conversationId, userId)\n    if (!ownershipResult.success || !ownershipResult.isOwner) {\n      const duration = timer()\n      logger.warn('Conversation update access denied'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\conversations\\[id]\\route.ts",
        "start": 153,
        "end": 169,
        "startLoc": {
          "line": 153,
          "column": 40,
          "position": 1186
        },
        "endLoc": {
          "line": 169,
          "column": 36,
          "position": 1320
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\conversations\\[id]\\route.ts",
        "start": 31,
        "end": 47,
        "startLoc": {
          "line": 31,
          "column": 37,
          "position": 229
        },
        "endLoc": {
          "line": 47,
          "column": 29,
          "position": 363
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", undefined, {\n        processingTime: duration,\n        conversationId,\n        userId,\n        ...(ownershipResult.error && { error: new Error(ownershipResult.error) })\n      })\n      return NextResponse.json(\n        { error: 'Conversation not found' },\n        { status: 404 }\n      )\n    }\n\n    // Parse and validate request body",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\conversations\\[id]\\route.ts",
        "start": 169,
        "end": 181,
        "startLoc": {
          "line": 169,
          "column": 36,
          "position": 1321
        },
        "endLoc": {
          "line": 181,
          "column": 35,
          "position": 1410
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\conversations\\[id]\\route.ts",
        "start": 47,
        "end": 59,
        "startLoc": {
          "line": 47,
          "column": 29,
          "position": 364
        },
        "endLoc": {
          "line": 59,
          "column": 24,
          "position": 453
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ", undefined, {\n        processingTime: duration,\n        conversationId\n      })\n      return sessionResult.error || NextResponse.json(\n        { error: 'Authentication required' },\n        { status: 401 }\n      )\n    }\n\n    const userId = sessionResult.session.user.id\n\n    // Validate conversation ownership\n    const ownershipResult = await validateConversationOwnership(conversationId, userId)\n    if (!ownershipResult.success || !ownershipResult.isOwner) {\n      const duration = timer()\n      logger.warn('Conversation delete access denied'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\conversations\\[id]\\route.ts",
        "start": 276,
        "end": 292,
        "startLoc": {
          "line": 276,
          "column": 40,
          "position": 2114
        },
        "endLoc": {
          "line": 292,
          "column": 36,
          "position": 2248
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\conversations\\[id]\\route.ts",
        "start": 31,
        "end": 47,
        "startLoc": {
          "line": 31,
          "column": 37,
          "position": 229
        },
        "endLoc": {
          "line": 47,
          "column": 29,
          "position": 363
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", undefined, {\n        processingTime: duration,\n        conversationId,\n        userId,\n        ...(ownershipResult.error && { error: new Error(ownershipResult.error) })\n      })\n      return NextResponse.json(\n        { error: 'Conversation not found' },\n        { status: 404 }\n      )\n    }\n\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "src\\app\\api\\conversations\\[id]\\route.ts",
        "start": 292,
        "end": 304,
        "startLoc": {
          "line": 292,
          "column": 36,
          "position": 2249
        },
        "endLoc": {
          "line": 304,
          "column": 7,
          "position": 2338
        }
      },
      "secondFile": {
        "name": "src\\app\\api\\conversations\\[id]\\route.ts",
        "start": 47,
        "end": 59,
        "startLoc": {
          "line": 47,
          "column": 29,
          "position": 364
        },
        "endLoc": {
          "line": 59,
          "column": 24,
          "position": 453
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(),\n  metadata: z.object({\n    model: z.string().min(VALIDATION_LIMITS.MIN_STRING_LENGTH, VALIDATION_MESSAGES.MODEL_REQUIRED),\n    tokens: z.number().positive(),\n    cost: z.number().positive(),\n    processingTime: z.number().positive()\n  }),",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\validation\\schemas.ts",
        "start": 238,
        "end": 244,
        "startLoc": {
          "line": 238,
          "column": 9,
          "position": 2600
        },
        "endLoc": {
          "line": 244,
          "column": 2,
          "position": 2684
        }
      },
      "secondFile": {
        "name": "src\\lib\\validation\\schemas.ts",
        "start": 165,
        "end": 172,
        "startLoc": {
          "line": 165,
          "column": 8,
          "position": 1711
        },
        "endLoc": {
          "line": 172,
          "column": 2,
          "position": 1796
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ")).optional(),\n  metadata: z.object({\n    model: z.string().min(VALIDATION_LIMITS.MIN_STRING_LENGTH, VALIDATION_MESSAGES.MODEL_REQUIRED),\n    tokens: z.number().positive(),\n    cost: z.number().positive(),\n    processingTime: z.number().positive()\n  }),\n  error: z.string().optional()\n})\n\n// Prisma query validation schemas",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\validation\\schemas.ts",
        "start": 259,
        "end": 269,
        "startLoc": {
          "line": 259,
          "column": 2,
          "position": 2899
        },
        "endLoc": {
          "line": 269,
          "column": 35,
          "position": 3007
        }
      },
      "secondFile": {
        "name": "src\\lib\\validation\\schemas.ts",
        "start": 238,
        "end": 248,
        "startLoc": {
          "line": 238,
          "column": 2,
          "position": 2596
        },
        "endLoc": {
          "line": 248,
          "column": 25,
          "position": 2704
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ").optional(),\n  metadata: z.object({\n    model: z.string().min(VALIDATION_LIMITS.MIN_STRING_LENGTH, VALIDATION_MESSAGES.MODEL_REQUIRED),\n    tokens: z.number().positive(),\n    cost: z.number().positive(),\n    processingTime: z.number().positive()\n  })\n})\n\n// Environment variable schemas",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\validation\\schemas.ts",
        "start": 326,
        "end": 335,
        "startLoc": {
          "line": 326,
          "column": 2,
          "position": 3808
        },
        "endLoc": {
          "line": 335,
          "column": 32,
          "position": 3900
        }
      },
      "secondFile": {
        "name": "src\\lib\\validation\\schemas.ts",
        "start": 238,
        "end": 174,
        "startLoc": {
          "line": 238,
          "column": 2,
          "position": 2597
        },
        "endLoc": {
          "line": 174,
          "column": 22,
          "position": 1800
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ", 'conversation', conversationId, undefined, {\n      processingTime: duration\n    })\n\n    return { success: true }\n  } catch (err) {\n    const duration = timer()\n    const error = err instanceof Error ? err : new Error(CONVERSATION_MESSAGES.UNKNOWN_ERROR)\n\n    logger.error('Failed to archive conversation'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\utils\\conversations.ts",
        "start": 593,
        "end": 602,
        "startLoc": {
          "line": 593,
          "column": 11,
          "position": 4619
        },
        "endLoc": {
          "line": 602,
          "column": 33,
          "position": 4711
        }
      },
      "secondFile": {
        "name": "src\\lib\\utils\\conversations.ts",
        "start": 254,
        "end": 263,
        "startLoc": {
          "line": 254,
          "column": 10,
          "position": 1948
        },
        "endLoc": {
          "line": 263,
          "column": 32,
          "position": 2040
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "} from '../../types/chat'\n\n/**\n * Serialize complex filter objects for logging\n */\nfunction serializeFiltersForLogging(filters: any): Record<string, string | number | boolean | null> {\n  if (!filters) return {}\n\n  const serialized: Record<string, string | number | boolean | null> = {}\n\n  for (const [key, value] of Object.entries(filters)) {\n    if (value === null || value === undefined) {\n      serialized[key] = null\n    } else if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n      serialized[key] = value\n    } else if (value instanceof Date) {\n      serialized[key] = value.toISOString()\n    } else if (Array.isArray(value)) {\n      serialized[key] = value.join(', ')\n    } else if (typeof value === 'object') {\n      serialized[key] = JSON.stringify(value)\n    } else {\n      serialized[key] = String(value)\n    }\n  }\n\n  return serialized\n}\n\n/**\n * Data query handler that processes natural language data requests\n * and executes safe database queries with comprehensive logging\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\ai\\dataQueryHandler.ts",
        "start": 9,
        "end": 41,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 65
        },
        "endLoc": {
          "line": 41,
          "column": 4,
          "position": 391
        }
      },
      "secondFile": {
        "name": "src\\lib\\prisma\\queryBuilder.ts",
        "start": 4,
        "end": 36,
        "startLoc": {
          "line": 4,
          "column": 2,
          "position": 43
        },
        "endLoc": {
          "line": 36,
          "column": 4,
          "position": 369
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n        model: this.model,\n        tokens: result.metadata.tokens,\n        cost: result.metadata.cost\n      })\n\n      return result\n    } catch (err) {\n      const duration = timer()\n      const error = err instanceof Error ? err : new Error('Unknown error')\n\n      logger.error('Clarification processing failed'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\ai\\clarificationHandler.ts",
        "start": 91,
        "end": 102,
        "startLoc": {
          "line": 91,
          "column": 17,
          "position": 613
        },
        "endLoc": {
          "line": 102,
          "column": 34,
          "position": 709
        }
      },
      "secondFile": {
        "name": "src\\lib\\ai\\generalChatHandler.ts",
        "start": 96,
        "end": 107,
        "startLoc": {
          "line": 96,
          "column": 2,
          "position": 630
        },
        "endLoc": {
          "line": 107,
          "column": 35,
          "position": 726
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n        metadata: {\n          model: this.model,\n          tokens: response.metadata.tokens,\n          cost: response.metadata.cost,\n          processingTime: duration\n        }\n      }\n    } catch (err) {\n      const duration = timer()\n      const error = err instanceof Error ? err : new Error('Unknown error')\n\n      logger.error('Clarifying questions generation failed'",
      "tokens": 0,
      "firstFile": {
        "name": "src\\lib\\ai\\clarificationHandler.ts",
        "start": 374,
        "end": 386,
        "startLoc": {
          "line": 374,
          "column": 2,
          "position": 2858
        },
        "endLoc": {
          "line": 386,
          "column": 41,
          "position": 2963
        }
      },
      "secondFile": {
        "name": "src\\lib\\ai\\generalChatHandler.ts",
        "start": 412,
        "end": 424,
        "startLoc": {
          "line": 412,
          "column": 12,
          "position": 3237
        },
        "endLoc": {
          "line": 424,
          "column": 36,
          "position": 3342
        }
      }
    }
  ],
  "filename": "C:\\Users\\david\\Documents\\jeffaisquared\\node_modules\\@jscpd\\html-reporter\\dist\\templates\\main.pug"
}